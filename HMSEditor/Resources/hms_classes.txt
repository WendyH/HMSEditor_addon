TAffineTransformation: TTransformation|Преобразование TBitmap32 - вращение, изменение размера, наклон.
  function Create: Constructor|Создание объекта (конструктор)
  procedure Clear|Сброс установленных параметров
  procedure Rotate(Cx, Cy, Alpha: TFloat)|Поворот относительно указанного центра на угол
    Cx - Координата X точки центра вращения
    Cy - Координата Y точки центра вращения
    Alpha - Угол поворота в радианах
  procedure Scale(Sx, Sy: TFloat)|Изменение размеров
    Sx - Новая ширина по X
    Sy - Новая высота по Y
  procedure Skew(Fx, Fy: TFloat)|Наклон изображения
    Fx - Смещение по координате X
    Fy - Смещение по координате Y
  procedure Translate(Dx, Dy: TFloat)|Установка точки, относительно которой будет происходить трансформация
    Dx - Координата X точки центра
    Dy - Координата Y точки центра

TAlbrechtKernel: TWindowedSincKernel|Sinc ядро для оконных функций Albrecht (см TWindowedSincKernel).
  property Terms: Integer|Число терминов окна, используемых косинус. В случае Terms=2, результат - оптимизированное окно Хэмминга/Хеннинга.\nНа следующем шаге Terms=3 приведет к оптимизированному Blackman окну. Если по максимуму (Terms=11) у вас будет сглаженный, но пикселизированный результат.
  property Width: Integer|Это свойство позволяет пользователю контролировать ширину ядра. Это будет регулировать ширину окна, реализованных в классах-потомках.
  
TAmfHeader: TObject|Amf заголовок
  property Body: TAmfValue|Значение заголовка
  property HeaderName: String|Имя заголовка
  property MustUnderstand: Integer|Должен соответствовать стандарту

TAmfMessage: TObject|Сообщение
  property Body: TAmfValue|Содержание сообщения
  property ResponseURI: String|Адрес URl ответа
  property TargetURI: String|Адрес URl цели
  
TAmfPacket: TObject|Amf пакет
  function AddHeader(const aHeaderName: string; aMustUnderstand: Integer; aValueMarker: Integer; const aValue Variant): TAmfMessage|Добавление заголовка
    aHeaderName - имя заголовка
	aMustUnderstand - должен соответствовать стандарту
	aValueMarker - маркер значения
	aValue - значение заголовка
  function AddMessage(const aTargetURI, ResponseURI: string; aValueMarker: Integer; const aValue: Variant; const aName: string): TAmfMessage|Добавление сообщения
    aTargetURI - адрес цели
	ResponseURI - адрес ответа
	aValueMarker - маркер значения
	aValue - значение сообщения
	aName = имя сообщения
  function Create: Constructor|Создание объекта (конструктор)
  function LoadFromFile(const aFileName: String): Boolean|Загрузить из файла
    aFileName - путь и имя файла, из которого будут загружены данные
  function LoadFromString(const aValue: String): Boolean|Загрузить из строки
    aValue - строка, из которой будут загружены данные
  function SaveToString: string|Сохранить в строку
  index property HeaderList(p0: Integer): TAmfHeader
  index property MessageList(p0: Integer): TAmfMessage
  procedure Clear|Очистка коллекции или набора подчинённых объектов
  procedure SaveToFile(const aFileName: String)|Сохранить данные объекта в файл
    aFileName - путь и имя файла, из которого будут загружены данные
  property HeaderCount: Integer|Количество заголовков
  property MessageCount: Integer|Количество сообщений
  
TAmfValue: TObject|Значение Amf сообщения
  function AddValue(aMarker: Integer; const aValue: Variant; const aName: String = ): TAmfValue|Добавление значения
    aMarker - маркер значения
	aValue - значение
	aName - имя значения
  function FindValue(const aName: String): TAmfValue|Найти значение по имени
	aName - имя значения, поиск которого будет происходить.
  index property ChildValues(p0: Variant): TAmfValue|Доступ к подчинённым значениям
    p0 - индекс значения (предположительно)
  procedure AddValues(const aValues: Variant)|Добавление значений
    aValues - массив значений
  property Count: Integer|Количество подчинённых элементов
  property Marker: Integer|Маркер
  property Name: String|Имя элемента
  property Value: Variant|Значение
  
TApplication: TComponent|Класс приложения
  procedure Minimize|Свернуть приложение
  procedure ProcessMessages|Метод ProcessMessages необходимо применять в динамичных приложениях, требующих немедленного отображения выполненных в программе действий. Для повышения быстродействия программы сообщения (Messages), которые объект Application посылает объектам программы, этими объектами выполняются не сразу после получения, а по мере накопления некоторой очереди.
  procedure Restore|Восстановить окно приложения
  property ExeName: String|Полный путь и имя исполняемого файла приложения
  property Name: String|Имя приложения
  property Tag: Integer|Может использоваться для хранения дополнительной информации

TBevel: TGraphicControl|Рамка. Используется для рисования прямоугольной рамки, изображенной как выступающая или утопленная.\nКомпонент визуальный.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Height: Integer|Высота в пикселях
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property Shape: TBevelShape|Рисуемая фигура — одна из предопределенных в множестве TShapeType
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Style: TBevelStyle|Стиль элемента — утопленный (bsLowered) или приподнятый (bsRaised)
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  
TBitBtn: TButton|Кнопка с изображением
  property Action: TBasicAction|Определяет действие, связанное с нажатием кнопки.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Cancel: Boolean|Определяет, является ли действие кнопки, действием по-умолчанию при отмене - нажатию Esc
  property Caption: String|Надпись на кнопке
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Default: Boolean|Определяет, является ли кнопка по-умолчанию (при нажатии Enter)
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления.\nМожно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним
  property Font: TFont|Используемый шрифт
  property Glyph: TBitmap|Свойство Glyph типа TBitmap определяет растровый рисунок кнопки. По умолчанию свойство Glyph имеет значение None, т. е. кнопка не содержит рисунок. Рисунок может содержать до трех отдельных изображений (глифов).
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Kind: TBitBtnKind|Свойство Kind определяет один из стандартных вариантов кнопки - указанных рисунков в свойстве Glyph
  property Layout: TButtonLayout|Определяет к какому краю кнопки будет прижиматься пиктограмма
  property Left: Integer|Координата левого края компонента в пикселях
  property Margin: Integer|Определяет расстояние в пикселах от края компонента
  property Margins: TMargins|Отступ от края внутри элемента 
  property ModalResult: Integer|При закрытии модальной формы функция возвращает значение свойства ModalResult
  property Name: String|Имя элемента
  property NumGlyphs: Integer|Определяет сколько растровых изображений размещается в файле, содержащем пиктограмму
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Spacing: Integer|Определяет расстояние в пикселах от рисунка до текста
  property Style: TButtonStyle|Определяет как выглядит кнопка в зависимости от стиля предпочтительной операционной системы. Значение bsNew соответствует современным вариантам Windows. Стиль bsAutoDetect приводит оформление кнопки к стилю операционной системы, управляющей работой программы в настоящий момент.
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  property WordWrap: Boolean|Включение или отключение переноса слов, если весь текст не входит.
  
TBitmap: TGraphic|Класс TBitmap является основой растровой графики в Delphi, он определяет класс изображений или битовых карт, где изображение задается цветами всех своих пикселей.
  property Canvas: TCanvas|Обеспечивает пространство (холст, канву) для создания, хранения и модификации графических объектов.

TBitmap32: TObject|Главный класс для хранения и обработки изображений
  function BoundsRect: TRect|Определяет прямоугольник, описывающий компонент, в координатах содержащего его контейнера.\nСвойство BoundsRect использует тип TRect и позволяет получить одновременно координаты пикселей всех четырех углов компонента. Иной способ получить те же координаты - использовать свойства компонента Left (левый край), Top (верхний край), Width (ширина), Height (высота) и соответствующие вычисления.
  function CanvasAllocated: Boolean|Определяет, виделен ли уже Canvas.
  function Empty: Boolean|Возвращает True, если растровое изображение пусто, то есть ширина или высота равна нулю.
  function SetSize(NewWidth, NewHeight: Integer): Boolean|Задаёт ширину и высоту изображения
    NewWidth - значение новой ширины
    NewHeight - значение новой высоты
  function TextExtent(const Text: string): TSize|Возвращает ширину и высоту строки в пикселях в зависимости от текущего шрифта. Обратите внимание, что размер возвращаемый этой функцией, может отличаться от фактической ширины текста, полученной с помощью функции RenderText, особенно при использовании растровых шрифтов.
    Text - измеряемый текст
  function TextHeight(const Text: string): Integer|Возвращает высоту строки в пикселях в зависимости от текущего шрифта.
    Text - измеряемый текст
  function TextWidth(const Text: string): Integer|Возвращает ширину строки в пикселях в зависимости от текущего шрифта.
    Text - измеряемый текст
  function Create: Constructor|Создание объекта (конструктор)
  function LoadFromFile(const FileName: string): Boolean|Загружает изображение из файла. В случае успеха возвращает True, иначе False. Этот метод использует временный объект TPicture, чтобы загрузить данные любого формата, поддерживаемого TPicture.
    FileName - путь и имя файла, из которого будут загружены данные
  function LoadFromString(const aImageData: string): Boolean|Загружает изображение из строки, содержащей данные растрового изображения.
    aImageData - строка, из которой будут загружены данные
  function SaveToString(const aImageType: string; SaveTopDown: Boolean = False)|Сохраняет изображение в строку.
    aImageType - тип изображения
	SaveTopDown - сохранять сверху вниз (обычно формат .bmp сохраняет снизу вверх)
  index property Pixel(p0: Integer; p1: Integer): TColor32|Обеспечивает доступ к значению цвета пикселя по координатам X и Y. Например:\nBitmap32[10, 20] := Bitmap32[20, 10]; // копирует пиксель из координаты (20,10) в (10,20)
    p0 - координата X
    p1 - координата Y
  index property PixelF(p0: Single; p1: Single): TColor32|Обеспечивает доступ к значению цвета пикселя по координатам X и Y переданным в формате численного значения с плавающей точкой float
    p0 - координата X
    p1 - координата Y
  index property PixelFR(p0: Single; p1: Single): TColor32|
    p0 - координата X
    p1 - координата Y
  index property PixelFS(p0: Single; p1: Single): TColor32|Безопасная (safe) реализация свойства PixelF. Если координаты выходят за пределы границ bitmap, то при считывании возвращается значение свойства OuterColor, а при записи - ничего не происходит.
    p0 - координата X
    p1 - координата Y
  index property PixelFW(p0: Single; p1: Single): TColor32|Это "обёрнутая" (wrapping) версия свойства PixelF. При чтении пикселя за границами изображения, возвращаемое значение зависит от свойства WrapMode. Свойства является безопасным.
    p0 - координата X
    p1 - координата Y
  index property PixelS(p0: Integer; p1: Integer): TColor32|Безопасная (safe) реализация свойства Pixel. Если координаты выходят за пределы границ bitmap, то при считывании возвращается значение свойства OuterColor, а при записи - ничего не происходит.
    p0 - координата X
    p1 - координата Y
  index property PixelW(p0: Integer; p1: Integer): TColor32|"Обёрнутая" (wrapping) версия свойства Pixel. При чтении пикселя за границами изображения, возвращаемое значение зависит от свойства WrapMode. Свойства является безопасным.
    p0 - координата X
    p1 - координата Y
  index property PixelX(p0: TFixed; p1: TFixed): TColor32|Обеспечивает способ доступа к пикселам с фиксированной точкой координат. Возвращенный цвет вычисляется путем выполнения линейной интерполяции по четырем соседним пикселям. Аналогичным образом, когда пиксели включены и сглажены.
    p0 - координата X
    p1 - координата Y
  index property PixelXR(p0: TFixed; p1: TFixed): TColor32
    p0 - координата X
    p1 - координата Y
  index property PixelXS(p0: TFixed; p1: TFixed): TColor32|Безопасная (safe) реализация свойства PixelX. Если координаты выходят за пределы границ bitmap, то при считывании возвращается значение свойства OuterColor, а при записи - ничего не происходит.
    p0 - координата X
    p1 - координата Y
  index property PixelXW(p0: Integer; p1: Integer): TColor32|"Обёрнутая" (wrapping) версия свойства PixelX. При чтении пикселя за границами изображения, возвращаемое значение зависит от свойства WrapMode. Свойства является безопасным.
    p0 - координата X
    p1 - координата Y
  procedure AdjustBrightness(aLevel: Single)|Регулировка яркости изображения
    aLevel - значение уровня яркости
  procedure AdjustContrast(aLevel: Single)|Регулировка контрастности изображения
    aLevel - значение уровня контраста
  procedure AdjustGamma(R, G, B: Single)|Регулировка гаммы изображения
    R - значение красного цвета: 0...255
    G - значение зелёного цвета: 0...255
    B - значение голубого цвета: 0...255
  procedure AdjustHLS(aHue, aLightness, aSaturation: Integer)|Регулировка HLS (Hue, Lightness, Saturation)
    aHue - оттенок
    aLightness - яркость
    aSaturation - насыщение
  procedure AdjustHue(aAngle: Integer)|Регулировка оттенка изображения
    aAngle - значение уровня оттенка
  procedure AdjustSaturation(aLevel: Integer)|Регулировка насыщенности изображения
    aLevel - значение уровня насыщенности
  procedure Assign(Source: TPersistent)|Этот метод осуществляет копирование содержимого одного объекта (Source) в другой объект TBitmap (Self, т. е. в объект, вызвавший метод Assign). При этом объект-получатель остается самим собой, чего нельзя достигнуть, используя простое присваивание переменных объектного типа.
    Source - объект, содержимое которого будет скопировано
  procedure Blur(ARadius: Integer)|Эффект размытия
    ARadius - радиус размытия
  procedure Clear|Очистка изображения
  procedure ClearEx(FillColor: TColor32)|Очистка изображения и заполнение указанным цветом
    FillColor - цвет заполнения при очистке
  procedure CreateBlackWhite(aWhiteColor: TColor32 = $FFFFFFFF; aBlackColor: TColor32 = $FF000000; aQuantity: Byte = 0)|Создание черно-белого (двухцветного) изображения, где вместо цветов черного и белого могут задаваться другие оттенки.
    aWhiteColor - значение "белого" оттенка
    aBlackColor - значение "черного" оттенка
    aQuantity - количество градаций цвета
  procedure Delete|Удаление текущего объекта
  procedure DeleteCanvas|Удаление объекта Canvas
  procedure Draw1(DstX, DstY: Integer; Src: TBitmap32)|Отрисовка другого изображения TBitmap32 по заданным координатам
    DstX - координата X точки приёмника, по которой будет отрисовано изображение
    DstY - координата Y точки приёмника, по которой будет отрисовано изображение
	Src - изображение которое будет отрисовано по заданным координатам
  procedure Draw2(const DstRect, SrcRect: TRect; Src: TBitmap32)|Отрисовка заданного прямоугольника другого изображения TBitmap32 в заданный прямоугольник этого
    DstRect - структура типа TRect, задающая прямоугольник получателя (где будет отрисовано изображение)
    SrcRect - структура типа TRect, задающая прямоугольник изображения, которое будет отрисовано
	Src - изображение которое будет отрисовано
  procedure Draw3(const DstRect, SrcRect: TRect; hSrc: HDC)|Отрисовка заданного прямоугольника HDC в заданный прямоугольник этого
    DstRect - структура типа TRect, задающая прямоугольник получателя (где будет отрисовано изображение)
    SrcRect - структура типа TRect, задающая прямоугольник изображения, которое будет отрисовано
	hSrc - handle DC
  procedure DrawTo1(Dst: TBitmap32)|Отрисовка своего изображения в указанный Bitmap. Работает наподобии метода Draw, только копирует своё исходное изображение.
	Dst - изображение в которое будет происходить отрисовка
  procedure DrawTo2(Dst: TBitmap32; DstX, DstY: Integer)|Отрисовка своего изображения в указанный Bitmap по указанным координатам. Работает наподобии метода Draw, только копирует своё исходное изображение.
	Dst - изображение в которое будет происходить отрисовка
    DstX - координата X, по которой будет отрисовано изображение
    DstY - координата Y, по которой будет отрисовано изображение
  procedure DrawTo3(Dst: TBitmap32; const DstRect: TRect)|Отрисовка своего изображения в указанный Bitmap по заданному прямоугольнику
	Dst - изображение в которое будет происходить отрисовка
    DstRect - структура типа TRect, задающая прямоугольник получателя (где будет отрисовано изображение)
  procedure DrawTo4(Dst: TBitmap32; const DstRect, SrcRect: TRect)|Отрисовка своего изображения из указанного прямоугольника в указанный Bitmap в заданный прямоугольник
	Dst - изображение в которое будет происходить отрисовка
    DstRect - структура типа TRect, задающая прямоугольник получателя (где будет отрисовано изображение)
    SrcRect - структура типа TRect, задающая прямоугольник изображения, которое будет отрисовано
  procedure DrawTo5(hDst: HDC; DstX, DstY: Integer)|Отрисовка своего изображения в заданный DC по указанным координатам
	hDst - handle DC, в которое будет происходить отрисовка
    DstX - координата X, по которой будет отрисовано изображение
    DstY - координата Y, по которой будет отрисовано изображение
  procedure DrawTo6(hDst: HDC; const DstRect, SrcRect: TRect)|Отрисовка своего изображения в заданный DC по указанным прямоугольникам
	hDst - handle DC, в которое будет происходить отрисовка
    DstRect - структура типа TRect, задающая прямоугольник получателя (где будет отрисовано изображение)
    SrcRect - структура типа TRect, задающая прямоугольник изображения, которое будет отрисовано
  procedure FillRect(X1, Y1, X2, Y2: Integer; Value: TColor32)|Заполнение прямоугольника заданным цветом. Когда X2 <= X1 или Y2 <= Y1, то ничего не заполняется.
    X1 - координата X верхней левой точки прямоугольника
    Y1 - координата Y верхней левой точки прямоугольника
    X2 - координата X нижей правой точки прямоугольника
    Y2 - координата Y нижей правой точки прямоугольника
	Value - цвет заполнения
  procedure FillRectS(X1, Y1, X2, Y2: Integer; Value: TColor32)|Заполнение прямоугольника заданным цветом (Safe, безопасное). Если границы прямоугольника выходят за пределы изображения - будет ограничение до этих границ.
    X1 - координата X верхней левой точки прямоугольника
    Y1 - координата Y верхней левой точки прямоугольника
    X2 - координата X нижей правой точки прямоугольника
    Y2 - координата Y нижей правой точки прямоугольника
	Value - цвет заполнения
  procedure FillRectS2(const ARect: TRect; Value: TColor32)|Заполнение прямоугольника заданным цветом (Safe, безопасное). Если границы прямоугольника выходят за пределы изображения - будет ограничение до этих границ.
    ARect - структура типа TRect, задающая прямоугольник который будет заполнен
	Value - цвет заполнения
  procedure FillRectT(X1, Y1, X2, Y2: Integer; Value: TColor32)|
    X1 - координата X верхней левой точки прямоугольника
    Y1 - координата Y верхней левой точки прямоугольника
    X2 - координата X нижей правой точки прямоугольника
    Y2 - координата Y нижей правой точки прямоугольника
	Value - цвет заполнения
  procedure FillRectTS(X1, Y1, X2, Y2: Integer; Value: TColor32)|Заполнение прямоугольника заданным цветом (Safe, безопасное). Если границы прямоугольника выходят за пределы изображения - будет ограничение до этих границ.
    X1 - координата X верхней левой точки прямоугольника
    Y1 - координата Y верхней левой точки прямоугольника
    X2 - координата X нижей правой точки прямоугольника
    Y2 - координата Y нижей правой точки прямоугольника
    Value - цвет заполнения
  procedure FillRectTS2(const ARect: TRect; Value: TColor32)|Заполнение прямоугольника заданным цветом (Safe, безопасное). Если границы прямоугольника выходят за пределы изображения - будет ограничение до этих границ.
    ARect - структура типа TRect, задающая прямоугольник который будет заполнен
    Value - цвет заполнения
  procedure FlipHorz(Dst: TBitmap32 = nil)|Горизонтальное переворачивание изображения
    Dst - Если указано, то результат будет помещён в указанный Bitmap. Необязательный. Если не указан, то результат будет в текущем изображении.
  procedure FlipVert(Dst: TBitmap32 = nil)|Вертикальное переворачивание изображения
    Dst - Если указано, то результат будет помещён в указанный Bitmap. Необязательный. Если не указан, то результат будет в текущем изображении.
  procedure FrameRectS(X1, Y1, X2, Y2: Integer; Value: TColor32)|Отрисовка прямоугольной рамки заданным цветом
    X1 - координата X верхней левой точки прямоугольника
    Y1 - координата Y верхней левой точки прямоугольника
    X2 - координата X нижей правой точки прямоугольника
    Y2 - координата Y нижей правой точки прямоугольника
    Value - цвет рамки
  procedure FrameRectS(const ARect: TRect; Value: TColor32)|Отрисовка прямоугольной рамки заданным цветом (Safe - безопасная). Если Границы прямоугольника выходят за границы изображения - отрисованный прямоугольник будет ограничен краями данного изображения.
    ARect - структура типа TRect, задающая прямоугольник который будет отрисован
    Value - цвет рамки
  procedure FrameRectTS(X1, Y1, X2, Y2: Integer; Value: TColor32)|Отрисовка прямоугольной рамки заданным цветом (Safe - безопасная). Если Границы прямоугольника выходят за границы изображения - отрисованный прямоугольник будет ограничен краями данного изображения.
    X1 - координата X верхней левой точки прямоугольника
    Y1 - координата Y верхней левой точки прямоугольника
    X2 - координата X нижей правой точки прямоугольника
    Y2 - координата Y нижей правой точки прямоугольника
    Value - цвет рамки
  procedure FrameRectTS2(const ARect: TRect; Value: TColor32)|Отрисовка прямоугольной рамки заданным цветом (Safe - безопасная). Если Границы прямоугольника выходят за границы изображения - отрисованный прямоугольник будет ограничен краями данного изображения.
    ARect - структура типа TRect, задающая прямоугольник который будет отрисован
    Value - цвет рамки
  procedure FrameRectTSP(X1, Y1, X2, Y2: Integer)|Отрисовка прямоугольной рамки заданным цветом (Safe - безопасная). Если Границы прямоугольника выходят за границы изображения - отрисованный прямоугольник будет ограничен краями данного изображения.
    X1 - координата X верхней левой точки прямоугольника
    Y1 - координата Y верхней левой точки прямоугольника
    X2 - координата X нижей правой точки прямоугольника
    Y2 - координата Y нижей правой точки прямоугольника
  procedure Gradient(X1, Y1, X2, Y2: Integer; GradientStyle: TGradientStyle; ColorBegin, ColorEnd: Variant; Reverse: Boolean = False; Shift: Integer = 0; Rotation: Integer = 0)|Заполнение прямоугольника градиентом
    X1 - координата X верхней левой точки прямоугольника
    Y1 - координата Y верхней левой точки прямоугольника
    X2 - координата X нижей правой точки прямоугольника
    Y2 - координата Y нижей правой точки прямоугольника
    GradientStyle - стиль градиента (gsArrowD, gsArrowL, gsArrowR, gsArrowU, gsButterfly...)
    ColorBegin - Начальный цвет
    ColorEnd - конечный цвет
    Reverse - флаг реверса (заполнение от ColorEnd до ColorBegin)
    Shift - величина сдвига
    Rotation - величина поворота по часовой стрелке
  procedure GradientRect(Rect: TRect; GradientStyle: TGradientStyle; ColorBegin, ColorEnd: Variant; Reverse: Boolean = False; Shift: Integer = 0; Rotation: Integer = 0)|Заполнение прямоугольника градиентом
    Rect - структура типа TRect, задающая прямоугольник который будет отрисован
    GradientStyle - стиль градиента (gsArrowD, gsArrowL, gsArrowR, gsArrowU, gsButterfly...)
    ColorBegin - Начальный цвет
    ColorEnd - конечный цвет
    Reverse - флаг реверса (заполнение от ColorEnd до ColorBegin)
    Shift - величина сдвига
    Rotation - величина поворота по часовой стрелке
  procedure HorzLine(X1, Y, X2: Integer; Value: TColor32)|Отрисовка горизонтальной линии
    X1 - координата X начальной точки линии
    Y - координата Y линии
    X2 - координата X конечной точки линии
	Value - Цвет линии
  procedure HorzLineS(X1, Y, X2: Integer; Value: TColor32)|Безопасная отрисовка горизонтальной линии (указание координат может выходить за пределы границ изображения)
    X1 - координата X начальной точки линии
    Y - координата Y линии
    X2 - координата X конечной точки линии
	Value - Цвет линии
  procedure HorzLineT(X1, Y, X2: Integer; Value: TColor32)|Отрисовка горизонтальной линии
    X1 - координата X начальной точки линии
    Y - координата Y линии
    X2 - координата X конечной точки линии
	Value - Цвет линии
  procedure HorzLineTS(X1, Y, X2: Integer; Value: TColor32)|Безопасная отрисовка горизонтальной линии (указание координат может выходить за пределы границ изображения)
    X1 - координата X начальной точки линии
    Y - координата Y линии
    X2 - координата X конечной точки линии
	Value - Цвет линии
  procedure HorzLineTSP(X1, Y, X2: Integer)|Отрисовка горизонтальной пунктирной линии
    X1 - координата X начальной точки линии
    Y - координата Y линии
    X2 - координата X конечной точки линии
  procedure Line(X1, Y1, X2, Y2: Integer; Value: TColor32; L: Boolean = False)|Отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineA(X1, Y1, X2, Y2: Integer; Value: TColor32; L: Boolean = False)|Отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом с применением антиальясинга
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineAS(X1, Y1, X2, Y2: Integer; Value: TColor32; L: Boolean = False)|Безопасная отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом с применением антиальясинга
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineF(X1, Y1, X2, Y2: Single; Value: TColor32; L: Boolean = False)|Отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineFP(X1, Y1, X2, Y2: Single; L: Boolean = False)|Отрисовка пунктирной линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineFS(X1, Y1, X2, Y2: Single; Value: TColor32; L: Boolean = False)|Безопасная отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом (координаты могут выходить за границы изображения)
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineFSP(X1, Y1, X2, Y2: Single; L: Boolean = False)|Безопасная отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом (координаты могут выходить за границы изображения)
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineS(X1, Y1, X2, Y2: Integer; Value: TColor32; L: Boolean = False)|Безопасная отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом (координаты могут выходить за границы изображения)
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineT(X1, Y1, X2, Y2: Integer; Value: TColor32; L: Boolean = False)|Отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineTS(X1, Y1, X2, Y2: Integer; Value: TColor32; L: Boolean = False)|Безопасная отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом (координаты могут выходить за границы изображения)
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineToAS(X, Y: Integer)|Отрисовка линии от текущей точки до указанной точки (X,Y)
    X - координата X конечной точки линии
    Y - координата Y конечной точки линии
  procedure LineToFS(X, Y: Single)|Отрисовка линии от текущей точки до указанной точки (X,Y). После этого метода текущей точкой становится последняя точка линии.
    X - координата X конечной точки линии
    Y - координата Y конечной точки линии
  procedure LineToFSP(X, Y: Single)|Отрисовка пунктирной линии от текущей точки до указанной точки (X,Y)
    X - координата X конечной точки линии
    Y - координата Y конечной точки линии
  procedure LineToS(X, Y: Integer)|Отрисовка линии от текущей точки до указанной точки (X,Y)
    X - координата X конечной точки линии
    Y - координата Y конечной точки линии
  procedure LineToTS(X, Y: Integer)|Отрисовка линии от текущей точки до указанной точки (X,Y)
    X - координата X конечной точки линии
    Y - координата Y конечной точки линии
  procedure LineToXS(X, Y: TFixed)|Отрисовка линии от текущей точки до указанной точки (X,Y)
    X - координата X конечной точки линии
    Y - координата Y конечной точки линии
  procedure LineToXSP(X, Y: TFixed)|Отрисовка пунктирной линии от текущей точки до указанной точки (X,Y)
    X - координата X конечной точки линии
    Y - координата Y конечной точки линии
  procedure LineX(X1, Y1, X2, Y2: TFixed; Value: TColor32; L: Boolean = False)|Отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом с применением антиальясинга
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineXP(X1, Y1, X2, Y2: TFixed; L: Boolean = False)|Отрисовка пунктирной линии от точки (X1,Y1) до точки (X2,Y2) с применением антиальясинга
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineXS(X1, Y1, X2, Y2: TFixed; Value: TColor32; L: Boolean = False)|Безопасная отрисовка линии от точки (X1,Y1) до точки (X2,Y2) заданным цветом с применением антиальясинга
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure LineXSP(X1, Y1, X2, Y2: TFixed; L: Boolean = False)|Безопасная отрисовка пунктирной линии от точки (X1,Y1) до точки (X2,Y2) с применением антиальясинга
    X1 - координата X начальной точки линии
    Y1 - координата Y начальной точки линии
    X2 - координата X конечной точки линии
    Y2 - координата Y конечной точки линии
    L - Необязательный параметр, определяет, должна ли отрисована последняя точка (X2,Y2). По умолчанию методы Line не отрисовывают последнюю точку.
  procedure MoveTo(X, Y: Integer)|Перенос текущей точки на заданные координаты. Например, от этой точки будет рисоваться линия методом LineTo.
    X - координата X точки
    Y - координата Y точки
  procedure MoveToF(X, Y: Single)|Перенос текущей точки на заданные координаты. Например, от этой точки будет рисоваться линия методом LineTo.
    X - координата X точки
    Y - координата Y точки
  procedure MoveToX(X, Y: TFixed)|Перенос текущей точки на заданные координаты. Например, от этой точки будет рисоваться линия методом LineTo.
    X - координата X точки
    Y - координата Y точки
  procedure RaiseRectTS(X1, Y1, X2, Y2: Integer; Contrast: Integer)|Рисует приподнятую или утопленную облать. Контраст может принимать целое значение в диапазоне от -100 до +100.
    X1 - координата X верхнего левого угла области
    Y1 - координата Y верхнего левого угла области
    X2 - координата X нихнего правого угла области
    Y2 - координата Y нихнего правого угла области
    Contrast - Значение уровня контраста (приподнятости или утопленности). Значение от -100 до +100.
  procedure RaiseRectTS2(const ARect: TRect; Contrast: Integer)|Рисует приподнятую или утопленную облать. Контраст может принимать целое значение в диапазоне от -100 до +100.
    ARect - прямоугольник области
    Contrast - Значение уровня контраста (приподнятости или утопленности). Значение от -100 до +100.
  procedure Reflect(aDest: TBitmap32; aPercentage, aOpacityMax, aOpacityMin: Integer)|Отражение изображения
    aDest - Bitmap в который будет отрисовано отражение
    aPercentage - процент отражаемого изображения
    aOpacityMax - максимальная прозрачность
    aOpacityMin - минимальная прозрачность
  procedure RenderText(X, Y: Integer; const Text: string; AALevel: Integer; Color: TColor32)|Метод рисует строку символов. Этот метод значительно медленнее по сравнению с функциями TextOut, однако он поддерживает сглаживание и прозрачность. AALevel определяет, как текст будет сглажен. Если он равен нулю, сглаживание не выполняется, значение 4 соответствует максимальному сглаживанию.
    X - координата X верхнего левого угла области текста
    Y - координата Y верхнего левого угла области текста
    Text - текст, который будет отрисован
    AALevel - уровень сглаживания (от 0 до 4)
    Color - цвет текста
  procedure ResetAlpha(aAlphaValue: Integer = 255)|Сброс альфа-канала всего растрового изображения либо на $FF или уровень, указанный в AlphaValue.
    aAlphaValue - значение альфа-канала изображения
  procedure Roll(Dx, Dy: Integer; FillBack: Boolean; FillColor: TColor32)|Прокрутка целого растрового изображения на Dx пикселей вправо и Dy пикселей вниз. Dx в Dy могут быть отрицательными. Новая область может быть необязательно заполнена цветом FillColor, если FillBack установлен в True.
    Dx - смещение по координате X
    Dy - смещение по координате Y
    FillBack - заполнять новую область цветом, указанным в следующем параметре
    FillColor - цвет очистки новой области, если FillBack = True
  procedure RollY(StartY, Dy: Integer; FillBack: Boolean; FillColor: TColor32)|Прокрутка целого растрового изображения на Dy пикселей вниз. Dy может быть отрицательным. Новая область может быть необязательно заполнена цветом FillColor, если FillBack установлен в True.
    Dy - смещение по координате Y (если положительное число - вниз, если отрицательное - вверх)
    FillBack - заполнять новую область цветом, указанным в следующем параметре
    FillColor - цвет заполнения новой области, если FillBack = True
  procedure Rotate180(Dst: TBitmap32 = nil)|Поворот изображения на 180 грудусов (переворачивание)
    Dst - Bitmap, в который будет помещён результат
  procedure Rotate270(Dst: TBitmap32 = nil)|Поворот изображения на 270 грудусов по часовой стрелке
    Dst - Bitmap, в который будет помещён результат
  procedure Rotate90(Dst: TBitmap32 = nil)|Поворот изображения на 90 грудусов по часовой стрелке
    Dst - Bitmap, в который будет помещён результат
  procedure SaveToFile(const FileName: string; SaveTopDown: Boolean = False)|Сохранение изображения в файл. Изображение сохраняется как 32-битный BMP.
    FileName - путь и имя файла, в который будет сохранено изображение
    SaveTopDown - сохранять снизу вверх. Необязательный.
* Кто бы расшифровал поподробнее нижеследующие методы ... *
  procedure Simple3D(const ppts: TArrayOfArrayOfFloatPoint; dx,dy,fadeRate: integer; TopLeftColor, BottomRightColor: TColor32)
  procedure Simple3D2(const pts: TArrayOfFixedPoint; dx,dy,fadeRate: integer; TopLeftColor, BottomRightColor: TColor32) 
  procedure Simple3D3(const pts: TArrayOfArrayOfFixedPoint; dx,dy,fadeRate: integer; TopLeftColor, BottomRightColor: TColor32) 
  procedure SimpleBevel(ppts: TArrayOfArrayOfFixedPoint; strokeWidth: integer; lightClr, darkClr: TColor32; angle_degrees: Integer) 
  procedure SimpleFill(const pts: TArrayOfFixedPoint; edgeColor, fillColor: TColor32; aFillMode: TPolyFillMode = pfWinding) 
  procedure SimpleFill2(const pts: TArrayOfFloatPoint; edgeColor, fillColor: TColor32; aFillMode: TPolyFillMode = pfWinding) 
  procedure SimpleFill3(const pts: TArrayOfArrayOfFixedPoint; edgeColor, fillColor: TColor32; aFillMode: TPolyFillMode = pfWinding) 
  procedure SimpleFill4(const pts: TArrayOfArrayOfFloatPoint; edgeColor, fillColor: TColor32; aFillMode: TPolyFillMode = pfWinding) 
  procedure SimpleFill5(const pts: TArrayOfFixedPoint; edgeColor: TColor32; pattern: TBitmap32; aFillMode: TPolyFillMode = pfWinding) 
  procedure SimpleFill6(const pts: TArrayOfArrayOfFixedPoint; edgeColor: TColor32; pattern: TBitmap32; aFillMode: TPolyFillMode = pfWinding) 
  procedure SimpleGradientFill(pts: TArrayOfFixedPoint; edgeColor: TColor32; const colors: TArrayOfColor32; angle_degrees: Integer) 
  procedure SimpleGradientFill2(pts: TArrayOfArrayOfFixedPoint; edgeColor: TColor32; const colors: TArrayOfColor32; angle_degrees: Integer) 
  procedure SimpleRadialFill(const pt: TFixedPoint; radius: TFloat; const colors: array of TColor32) 
  procedure SimpleRadialFill2(rec: TFloatRect; const colors: array of TColor32) 
  procedure SimpleRadialFill3(const pts: TArrayOfFixedPoint; const colors: array of TColor32; angle_degrees: Integer = 0) 
  procedure SimpleRadialFill4(const ppts: TArrayOfArrayOfFixedPoint; const colors: array of TColor32; angle_degrees: Integer = 0) 
  procedure SimpleShadow(const pts: TArrayOfFixedPoint; dx,dy,fadeRate: Integer; ShadowColor: TColor32; closed: Boolean = False; NoInteriorBleed: Boolean = False) 
  procedure SimpleShadow2(const pts: TArrayOfArrayOfFixedPoint; dx,dy,fadeRate: Integer; ShadowColor: TColor32; closed: Boolean = False; NoInteriorBleed: Boolean = False) 
  procedure Textout(X, Y: Integer; const Text: string)|Написать строку на растровом изображении. Строка будет написана с использованием текущего шрифта Font и цветом PenColor.
    X - координата X верхнего левого угла области текста
    Y - координата Y верхнего левого угла области текста
    Text - текст, который будет отрисован
  procedure TileTo(hDst: HDC; const DstRect, SrcRect: TRect)|Замостить изображение плиткой из кусков текущего изображения
    hDst - HDC (Handle of Device Context), где будет отрисовано новое изображение
    DstRect - прямоугольная область контекста, где будет отрисовано новое изображение
    SrcRect - прямоугольная область текущего изображения, которое будет отрисовано
  procedure Transform(aDest: TBitmap32; aTransformation: TTransformation; aDestRect: TRect = nil)|Преобразование изображения с помощью указанного класса трансформации
    aDest - Bitmap приёмник, куда будет помещен результат трансформации
	aTransformation - созданный объект на основе класса трансформации, по методу которого будет происходить преобразование. Должен быть создан заранее и установлены его свойства. Например: TAffineTransformation, TBloatTransformation, TFishEyeTransformation и др.
    aDestRect - прямоугольная область приёмника, где будет отрисовано новое изображение. Необязательный параметр. Если не указан, то будет использована вся доступная область.
  procedure UpdateFont|Используйте этот метод перед вызовом функций API Windows, которые обрабатывают вывод текста. Это синхронизирует шрифт устройства со свойством Font. Вы не должны вызвать UpdateFont при использовании методов вывода текста в TBitmap32, так как они вызывают UpdateFont автоматически.
  procedure VertLine(X, Y1, Y2: Integer; Value: TColor32)|Рисует вертикальную линию от точки (X,Y1) до (X,Y2). Эта функция быстрее, чем Line. Значение Y2 должно быть больше или равно Y1.
    X - координата X линии
    Y1 - координата Y начальной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
  procedure VertLineS(X, Y1, Y2: Integer; Value: TColor32)|Безопасная отрисовка вертикальной линии от точки (X,Y1) до (X,Y2). Координаты могут выходить за пределы размера изображения.
    X - координата X линии
    Y1 - координата Y начальной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
  procedure VertLineT(X, Y1, Y2: Integer; Value: TColor32)|Рисует вертикальную линию от точки (X,Y1) до (X,Y2). Эта функция быстрее, чем Line. Значение Y2 должно быть больше или равно Y1.
    X - координата X линии
    Y1 - координата Y начальной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
  procedure VertLineTS(X, Y1, Y2: Integer; Value: TColor32)|Безопасная отрисовка вертикальной линии от точки (X,Y1) до (X,Y2). Координаты могут выходить за пределы размера изображения.
    X - координата X линии
    Y1 - координата Y начальной точки линии
    Y2 - координата Y конечной точки линии
	Value - Цвет линии
  procedure VertLineTSP(X, Y1, Y2: Integer)|Безопасная отрисовка пунктирной вертикальной линии от точки (X,Y1) до (X,Y2). Координаты могут выходить за пределы размера изображения.
    X - координата X линии
    Y1 - координата Y начальной точки линии
    Y2 - координата Y конечной точки линии
  property Canvas: TCanvas|Обеспечивает пространство (холст, канву) для создания, хранения и модификации графических объектов.
  property ClipRect: TRect|Текущая прямоугольная область для рисования
  property CombineMode: TCombineMode|
  property DrawMode: TDrawMode|Режим отрисовки
  property Font: TFont|Используемый шрифт
  property Handle: HDC|Handle of Device Context
  property Height: Integer|Высота в пикселях 
  property MasterAlpha: Integer|Альфа-канал всего изображения
  property OuterColor: Integer|
  property PenColor: TColor32|Цвет, который будет использован при рисовании линий, фигур и текста.
  property Resampler: TCustomResampler|Объект преобразователя изображения
  property ResamplerClassName: String|Определяет какой класс используется для преобразования изображения в Resampler
  property Rotate: Integer|Поворот изображения по часовой стрелке
  property StretchFilter: TStretchFilter|Свойство устарело, используйте Resampler для преобразований изображения.
  property Transparent: Boolean|Прозрачность
  property TransparentColor: Integer|Цвет прозрачности
  property Width: Integer|Ширина в пикселях
  property WrapMode: TWrapMode|Режим переноса строк
  
TBlackmanKernel: TWindowedSincKernel|Blackman-ядро фильтра преобразования изображений
  property Width: Integer|Ширина в пикселях
  
TBloatTransformation: TTransformation|Преобразование для Bitmap32. Обеспечивает регулируемый тип искажения объектива. Установка свойства BloatPower на положительную величину дает искажение типа "Рыбий глаз", но с меньшим сферическим эффектом. Установка свойства BloatPower с отрицательным значением будет влиять на преобразование в обратном направлении.
  property BloatPower: TFloat|Мощность раздутия (эффекта искажения)
  
TBoxKernel: TCustomKernel|Box-ядро фильтров преобразований изображений

TBrush: TPersistent|Кисть
  function Create: Constructor|Создание объекта (конструктор)
  property Color: Integer|Цвет кисти
  property Style: TBrushStyle|Стиль кисти (bsSolid, bsClear, bsHorizontal, bsVertical, bsFDiagonal, bsBDiagonal, bsCross, bsDiagCross)
  
TBrushCollection: TObject|Коллекция кистей TBrush

TButton: TWinControl|Элемент управления Кнопка
  property Action: TBasicAction|Определяет действие, связанное с нажатием кнопки.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Cancel: Boolean|Определяет, является ли действие кнопки, действием по-умолчанию при отмене - нажатию Esc
  property Caption: String|Надпись
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Default: Boolean|Определяет, является ли кнопка по-умолчанию (при нажатии Enter)
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property ModalResult: Integer|При закрытии модальной формы функция возвращает значение свойства ModalResult
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  property WordWrap: Boolean|Включение или отключение переноса слов, если весь текст не входит.

TCanvas: TPersistent|Канвас (холст). Canvas представляет из себя область компонента, на которой можно создавать, хранить и модифицировать графическое изображение. 
  function Create: Constructor|Создание объекта (конструктор)
  function TextHeight(const Text: string): Integer|Возвращает высоту заданного текста, с учетом размера шрифта.
    Text - Измеряемый текст
  function TextWidth(const Text: string): Integer|Возвращает ширину заданного текста, с учетом размера шрифта.
    Text - Измеряемый текст
  index property Pixels(p0: Integer; p1: Integer): TColor|Доступ к пикселям по заданным координатам X и Y. Возвращает цвет пикселя.
    p0 - X координата точки
    p1 - Y координата точки
  procedure Draw(X, Y: Integer; Graphic: TGraphic)|Отрисовка графического объекта по заданным координатам
    X координата точки отрисовки
    Y координата точки отрисовки
	Graphic - графический объект
  procedure Ellipse(X1, Y1, X2, Y2: Integer)|Рисует заполненную окружность или эллипс
    X1 - координата X верхнего левого угла прямоугольной области, в которую будет вписан овал
    Y1 - координата Y верхнего левого угла прямоугольной области, в которую будет вписан овал
    X2 - координата X нижнего правого угла прямоугольной области, в которую будет вписан овал
    Y2 - координата Y нижнего правого угла прямоугольной области, в которую будет вписан овал
  procedure LineTo(X, Y: Integer)|Прочертить линию до заданных координат от предыдущих значений координат. Координаты изначальной точки можно задать методом MoveTo(X, Y).
    X координата конечной точки линии
    Y координата конечной точки линии
  procedure MoveTo(X, Y: Integer)|Переместить текущую точку на заданные координаты, которая будет использоваться при рисовании линий методом LineTo(X, Y).
    X координата точки
    Y координата точки
  procedure Rectangle(X1, Y1, X2, Y2: Integer)|Нарисовать заполненный прямоугольник
    X1 - координата X верхнего левого угла прямоугольника
    Y1 - координата Y верхнего левого угла прямоугольника
    X2 - координата X нижнего правого угла прямоугольника
    Y2 - координата Y нижнего правого угла прямоугольника
  procedure RoundRect(X1, Y1, X2, Y2, X3, Y3: Integer)|Рисует прямоугольную рамку со скругленными углами, используя текущие установки пера Pen и заполняя площадь фигуры текущей кистью Brush. Рамка определяется прямоугольником с координатами углов (X1,Y1) и (X2,Y2). Углы скругляются с помощью эллипсов с шириной X3 и высотой Y3.
    X1 - координата X верхнего левого угла прямоугольника
    Y1 - координата Y верхнего левого угла прямоугольника
    X2 - координата X нижнего правого угла прямоугольника
    Y2 - координата Y нижнего правого угла прямоугольника
    X3 - ширина скругления углов
    Y3 - высота скругления углов
  procedure StretchDraw(X1, Y1, X2, Y2: Integer; Graphic: TGraphic)|Растягивание прямоугольной области
    X1 - координата X верхнего левого угла прямоугольника
    Y1 - координата Y верхнего левого угла прямоугольника
    X2 - координата X нижнего правого угла прямоугольника
    Y2 - координата Y нижнего правого угла прямоугольника
    Graphic - графическая область, которая будет растянута
  procedure TextOut(X, Y: Integer; const Text: string)|Вывод текста по заданным координатам. Будет выведен с учетом цвета и выбранного шрифта (свойства Brush и Font).
    X координата точки
    Y координата точки
	Text - выводимый текст
  property Brush: TBrush|Кисть. Определяет цвет и тип заполнения для заполнения замкнутых фигур. Далее - см свойства класса TBrush. 
  property CopyMode: Integer|Свойство CopyMode определяет то, как копировать образ с другого холста на собственную поверхность рисования. 
  property Font: TFont|Используемый шрифт 
  property Pen: TPen|Определяет свойства пера, используемые при рисовании линий.
  
TCanvas32: TObject|Канвас (холст) для работы с текстом и маской изображения
  function Create(ABitmap: TBitmap32): Constructor|Создание объекта (конструктор)
    ABitmap - изображение (Bitmap), которое ассоциируется с создаваемым холстом
  function CreateMask: TBitmap32|Создание маски изображения
  function MeasureText(const DstRect: TFloatRect; const Text: string; Flags: Integer): Variant|Замер области занимаемой выводимым текстом
    DstRect - ограничивающая прямоугольная область вывода текста
    Text - замеряемый текст
    Flags - флаг, определяющий направление текста
  procedure ApplyMask(aModified, aOriginal, aMask: TBitmap32; aInvertMask: Boolean)|Применение маски к изображению
    aModified - Bitmap, в который будет выведено новое получившееся изображение, после применения маски.
    aOriginal - Bitmap-оригинал, на который будет накладываться маска
    aMask - Bitmap, применяемая маска
    aInvertMask - флаг инверсии маски
  procedure RenderText(X, Y: TFloat; const Text: string)|Вывод текста на изображение
    X - координата X верхнего левого угла текста
    Y - координата Y верхнего левого угла текста
    Text - выводимый текст
  procedure RenderText2(const DstRect: TFloatRect; const Text: string; Flags: Integer)|Вывод текста на изображение
    DstRect - прямоугольник, определяющий координаты вывода текста
    Text - выводимый текст
    Flags - флаг направления текста
  property Bitmap: TBitmap32|Картинка элемента меню
  property Brushes: TBrushCollection|Набор кистей
  property Path: TFlattenedPath|Объект набора точек (путь, Path)
  property RendererClassName: String|Определяет имя используемого класса фильтра вывода текста
  property Transformation: TTransformation|Объект преобразования изображения
  
TCheckBox: TWinControl|Чекбокс - элемент управления - галочка для отметки
  property Action: TBasicAction|Определяет действие, связанное с элементом управления.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Alignment: TLeftRight|Выравнивание влево или вправо
  property AllowGrayed: Boolean|Доступность третьего состояния - серой отметки
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Caption: String|Надпись
  property Checked: Boolean|Состояния установленной галочки (ключено/выключено)
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Отражает доступность элемента
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property State: TCheckBoxState|Состояние чекбокса
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  property WordWrap: Boolean|Включение или отключение переноса слов, если весь текст не входит.

TCheckListBox: TCustomListBox|Отмечаемый список
  index property Checked(p0: Integer): Boolean|Доступ к состоянию отметки по номеру строки списка (начиная с 0)
    p0 - индекс строки списка (начиная с 0)
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property AllowGrayed: Boolean|Определяет, может ли быть флажок в "сером" состоянии.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoComplete: TAutoComplete|Определяет, может ли пользователь передать фокус элементам, набирая текст в списке.
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BevelWidth: Integer|Ширина скоса
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TBorderStyle|Определяет:\n* вид заголовка формы\n* доступные кнопки в заголовке формы\n* отображение строки меню поведение границ формы
  property Color: TColor32|Цвет элемента
  property Columns: Integer|Определяет количество столбцов в списке, которые видны без прокрутки.
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.     
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Flat: Boolean|Плоский стиль элемента
  property Font: TFont|Используемый шрифт
  property HeaderBackgroundColor: TColor32|Цвет фона заголовка
  property HeaderColor: TColor32|Цвет текста заголовка
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImeMode: TImeMode|Задаёт режим IME (input method editor), режим ввода теста.
  property ImeName: String|Задаёт имя режима ввода текста IME (input mode editor)
  property IntegralHeight: Boolean|Вычисленная высота списка
  property ItemHeight: Integer|Высота одного элемента списка
  property Items: TStrings|Элементы списка
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Sorted: Boolean|Включение/отключение сортировки
  property Style: TListBoxStyle|Стиль списка
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property TabWidth: Integer|Ширина табуляции
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  
TCollenction: TPersistent|Общий класс коллекции объектов
  index property Items(p0: Integer): TCollectionItem|Доступ к элементам коллекции по их индексу (начиная с 0)
    p0 - индекс элемента (начиная с 0)
  procedure Clear|Очистка коллекции или набора подчинённых объектов
  property Count: Integer|Количество элементов
  
TCollectionItem: TPersistent|Общий класс объекта коллекции элементов

TColorDialog: TCommonDialog|Диалоговое окно выбора цвета
  property Color: TColor32|Цвет элемента
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property CustomColors: TStrings|Набор цветов
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property Name: String|Имя элемента
  property Options: TColorDialogOptions|Опции диалогового окна выбора цвета
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  
TComboBox: TCustomComboBox|Элемент управления выбора значения из выпадающего списка
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoCloseUp: Boolean|Указывает, закрывается ли выпадающий список автоматически, когда пользователь выбирает элемент.
  property AutoComplete: TAutoComplete|Позиционирование соответствующего элемента списка при вводе текста
  property AutoCompleteDelay: Integer|Определяет задержку между нажатием клавиши и попытке автозаполнение поля
  property AutoDropDown: Boolean|Определяет выпадает ли список автоматически в ответ на нажатия клавиш пользователем
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property CharCase: TEditCharCase|Определяет регистр текста в выпадающем списке
  property Color: TColor32|Цвет элемента
  property Columns: Integer|Количество колонок в выпадающем списке
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property DropDownCount: Integer|Задает максимальное число элементов, отображаемых в раскрывающемся списке.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImeMode: TImeMode|Задаёт режим IME (input method editor), режим ввода теста.
  property ImeName: String|Задаёт имя режима ввода текста IME (input mode editor)
  property ItemHeight: Integer|Высота одного элемента списка
  property ItemIndex: Integer|Индекс текущего элемента в списке
  property Items: TStrings|Элементы списка
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MaxLength: Integer|Задает максимальное число символов, которое пользователь может ввести в редактируемой части поля.
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Sorted: Boolean|Определяет, в алфавитном порядке ли выпадающий список.
  property Style: TComboBoxStyle|Определяет стиль отображения выпадающего списка
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property TabWidth: Integer|Ширина табуляции
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Text: String|Текст редактируемой части
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TCommonDialog: TComponent|Базовый класс диалогового окна
  function Execute: Boolean|Запуск показа окна
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  
TComponent: TPersistent|Базовый класс визуального компонента
  function Create(AOwner: TComponent): Constructor|Создание объекта (конструктор)
    AOwner - компонент владелец
  property Name: String|Имя элемента
  property Owner: TComponent|Компонент родитель
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
 
TControl: TComponent|Базовый класс элемента управления интерфейса Windows
  event OnCanResize|Событие при смене значения свойства CanResize
  event OnClick|Событие при нажатии мышкой
  event OnDblClick|Событие при двойном нажатии мышкой
  event OnMouseDown|Событие при нажатии кнопки мышки
  event OnMouseMove|Событие при движении мышки над элементом управления
  event OnMouseUp|Событие при отжатии кнопки мышки
  event OnResize|Событие при изменении положения или размеров элемента управления
  procedure Hide|Скрыть элемент управления
  procedure SetBounds(ALeft, ATop, AWidth, AHeight: Integer)|Установка положения и размеров элемента управления
    ALeft - кордината положения по горизонтали (слева)
    ATop - кордината положения по вертикали (сверху)
    AWidth - ширина
    AHeight - высота
  procedure Show|Показать элемент управления
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Parent: TWinControl|Элемент управления-родитель
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Width: Integer|Ширина в пикселях
  
TControlScrollBar: TPersistent|Полоса прокрутки
  property ButtonSize: Integer|Размер кнопок прокрутки
  property Color: TColor32|Цвет элемента
  property Increment: Integer|Значения инкремента (величина шага прокрутки)
  property Margin: Integer|Определяет расстояние в пикселах от края компонента
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property Position: Integer|Текущая позиция
  property Range: Integer|Диапазон (максимальная величина позиции)
  property Size: Integer|Размер элементы
  property Smooth: Boolean
  property Style: TScrollBarStyle
  property ThumbSize: Integer
  property Tracking: Boolean
  property Visible: Boolean|Определяет, видим или невидим компонент
  
TCosineKernel: TCustomKernel|Cosine-ядро фильтров преобразований изображений
 
TCubicKernel: TCustomKernel|Cubic-ядро фильтров преобразований изображений
  property Coeff: Extended|Коэффициент
  
TCustomComboBox: TWinControl|Базовый класс элемента управления с выбором значения из выпадающего списка
  event OnChange|Событие при изменении значения 
  event OnCloseUp|Событие при закрытии выпадающего списка
  event OnDropDown|Событие при появлении выпадающего списка
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DroppedDown: Boolean|Определяет, выпал ли список
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ItemIndex: Integer|Индекс текущего элемента в списке
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Width: Integer|Ширина в пикселях
 
TCustomControl: TWinControl|Базовый класс элемента управления
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Width: Integer|Ширина в пикселях
 
TCustomForm: TScrollingWinControl|Базовый класс формы
  event OnActivate|Событие при получении формой фокуса
  event OnClose|Событие при закрытии формы
  event OnCloseQuery|Событие при закрытии формы
  event OnCreate|Событие при создании формы
  event OnDeactivate|Событие при потере фокуса формой
  event OnDestroy|Событие при уничтожении формы из памяти
  event OnHide|Событие при скрытии формы
  event OnPaint|Событие, возникающее при отрисовке компонента. 
  event OnShow|Событие при показе формы
  function ShowModal: Integer|Показать форму в модальном режиме
  procedure Close|Закрыть форму
  procedure Hide|Скрыть форму (сделать невидимой)
  procedure Show|Показать форму
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Canvas: TCanvas|Обеспечивает пространство (холст, канву) для создания, хранения и модификации графических объектов.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  roperty HorzScrollBar: TControlScrollBar|Элемент управления - горизонтальная прокрутка
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property VertScrollBar: TControlScrollBar|Вертикальная полоса прокрутки
  property Width: Integer|Ширина в пикселях

TCustomImageList: TComponent|Базовый класс списка изображений
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  
TCustomIniFile: TObject|Базовый класс для работы с INI файлами
  function Create(const FileName: String): Constructor|Создание объекта (конструктор)
    FileName - путь и имя файла, из которого будут считаны или в который будут записаны данные
  function ReadBinaryStream(const Section, Name: String; Value: TStream): Integer|Получает значение в бинарном виде из ini файла
    Section - имя секции
    Name - имя ключа
    Value - объект TStream, в который будет сохранено значение
  function ReadBool(const Section, Ident: String; Default: Boolean): Boolean|Получает значение типа Boolean из ini файла
    Section - имя секции
    Ident - идентификатор ключа
    Default - значение по-умолчанию, если в файле нет значения по заданным параметрам
  function ReadDate(const Section, Name: String; Default: TDateTime): TDateTime|Получает значение типа TDateTime из ini файла
    Section - имя секции
    Name - идентификатор ключа
    Default - значение по-умолчанию, если в файле нет значения по заданным параметрам
  function ReadDateTime(const Section, Name: String; Default: TDateTime): TDateTime|Получает значение типа TDateTime из ini файла
    Section - имя секции
    Name - идентификатор ключа
    Default - значение по-умолчанию, если в файле нет значения по заданным параметрам
  function ReadFloat(const Section, Name: String; Default: Double): Double|Получает значение типа Double из ini файла
    Section - имя секции
    Name - идентификатор ключа
    Default - значение по-умолчанию, если в файле нет значения по заданным параметрам
  function ReadInteger(const Section, Ident: String; Default: LongInt): LongInt|Получает значение типа LongInt из ini файла
    Section - имя секции
    Name - идентификатор ключа
    Default - значение по-умолчанию, если в файле нет значения по заданным параметрам
  function ReadTStrings(const Section: String; Value: TStrings; IsClear: Boolean = True): String;|Получает строки в объект типа TStrings из ini файла
    Section - имя секции
    Value - объект типа TStrings, в который будут записаны значения
    IsClear - очищать объект TStrings перед заполнением
  function ReadTime(const Section, Name: String; Default: TDateTime): TDateTime|Получает значение типа TDateTime из ini файла
    Section - имя секции
    Name - идентификатор ключа
    Default - значение по-умолчанию, если в файле нет значения по заданным параметрам
  function SectionExists(const Section: String): Boolean|Проверка существования секции
    Section - имя секции
  function ValueExists(const Section, Ident: String): Boolean|Проверка существования ключа
    Section - имя секции
    Ident - идентификатор ключа
  procedure WriteBinaryStream(const Section, Name: String; Value: TStream)|Записывает значение в бинарном виде в ini файл
    Section - имя секции
    Name - идентификатор ключа
    Value - значение, которое будет записано
  procedure WriteBool(const Section, Ident: String; Value: Boolean)|Записывает значение типа Boolean в ini файл
    Section - имя секции
    Name - идентификатор ключа
    Value - значение, которое будет записано
  procedure WriteDate(const Section, Name: String; Value: TDateTime)|Записывает значение даты типа TDateTime в ini файл
    Section - имя секции
    Name - идентификатор ключа
    Value - значение, которое будет записано
  procedure WriteDateTime(const Section, Name: String; Value: TDateTime)|Записывает значение даты и времени типа TDateTime в ini файл
    Section - имя секции
    Name - идентификатор ключа
    Value - значение, которое будет записано
  procedure WriteFloat(const Section, Name: String; Value: Double)|Записывает значение типа Double в ini файл
    Section - имя секции
    Name - идентификатор ключа
    Value - значение, которое будет записано
  procedure WriteInteger(const Section, Ident: String; Value: LongInt)|Записывает значение типа LongInt в ini файл
    Section - имя секции
    Ident - идентификатор ключа
    Value - значение, которое будет записано
  procedure WriteTStrings(const Section: String; Value: TStrings; IsClear: Boolean = True)|Записывает строки из объекта типа TStrings в ini файл
    Section - имя секции
    Value - объект типа TStrings, из которого будут записаны значения
    IsClear - очищать объект TStrings
  procedure WriteTime(const Section, Name: String; Value: TDateTime)|Записывает значение времени типа TDateTime в ini файл
    Section - имя секции
    Name - идентификатор ключа
    Value - значение, которое будет записано
  property FileName: String|Имя файла
  
TCustomKernel: TObject|Базовый класс ядра фильтров преобразований изображений

TCustomListBox: TWinControl|Базовый класс элемента управления список значений
  index property Selected(p0: Integer): Boolean|Доступ к выбранным элементам по индексу
    p0 - индекс выбранного элемента (начиная с 0)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ItemIndex: Integer|Индекс текущего элемента
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property SelCount: Integer|Количество выбранных элементов
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Width: Integer|Ширина в пикселях

TCustomPath: TObject|Базовый класс для всех 2D форм типа Path, представляющих группу соединённых линий и кривых
  function Create: Constructor|Создание объекта (конструктор)
  procedure Arc(const P: TFloatPoint; StartAngle, EndAngle, Radius: TFloat) 
  procedure BeginPath
  procedure Circle(const Cx, Cy, Radius: TFloat; Steps: Integer = 100) 
  procedure Circle2(const Center: TFloatPoint; Radius: TFloat; Steps: Integer = 100) 
  procedure Clear|Очистка коллекции или набора подчинённых объектов 
  procedure ClosePath 
  procedure ConicTo(const X1, Y1, X, Y: TFloat) 
  procedure ConicTo2(const P1, P: TFloatPoint) 
  procedure ConicTo3(const X, Y: TFloat) 
  procedure ConicTo4(const P: TFloatPoint) 
  procedure ConicToRelative(const X1, Y1, X, Y: TFloat) 
  procedure ConicToRelative2(const P1, P: TFloatPoint) 
  procedure ConicToRelative3(const X, Y: TFloat) 
  procedure ConicToRelative4(const P: TFloatPoint) 
  procedure CurveTo(const X1, Y1, X2, Y2, X, Y: TFloat) 
  procedure CurveTo2(const X2, Y2, X, Y: TFloat) 
  procedure CurveTo3(const C1, C2, P: TFloatPoint) 
  procedure CurveTo4(const C2, P: TFloatPoint) 
  procedure CurveToRelative(const X1, Y1, X2, Y2, X, Y: TFloat) 
  procedure CurveToRelative2(const X2, Y2, X, Y: TFloat) 
  procedure CurveToRelative3(const C1, C2, P: TFloatPoint) 
  procedure CurveToRelative4(const C2, P: TFloatPoint) 
  procedure Ellipse(Rx, Ry: TFloat; Steps: Integer = 100) 
  procedure Ellipse2(const Cx, Cy, Rx, Ry: TFloat; Steps: Integer = 100) 
  procedure EndPath 
  procedure HorizontalLineTo(const X: TFloat) 
  procedure HorizontalLineToRelative(const X: TFloat)
  procedure LineTo(const X, Y: TFloat) 
  procedure LineTo2(const P: TFloatPoint) 
  procedure LineToRelative(const X, Y: TFloat) 
  procedure LineToRelative2(const P: TFloatPoint) 
  procedure MoveTo(const X, Y: TFloat) 
  procedure MoveTo2(const P: TFloatPoint) 
  procedure MoveToRelative(const X, Y: TFloat) 
  procedure MoveToRelative2(const P: TFloatPoint) 
  procedure Polygon(const APoints: Variant) 
  procedure Rectangle(const Rect: TFloatRect) 
  procedure RoundRect(const Rect: TFloatRect; const Radius: TFloat) 
  procedure VerticalLineTo(const Y: TFloat) 
  procedure VerticalLineToRelative(const Y: TFloat) 
  property CurrentPoint: TFloatPoint|Текущая точка
  
TCustomResampler: TObject|Класс для передискретизации изображений с помощью произвольных фильтров
  property PixelAccessMode: TPixelAccessMode|Режим доступа к пикселям изображения
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ItemIndex: Integer
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Width: Integer|Ширина в пикселях

TCustomRichEdit: TWinControl|Базовый класс редактора текста в формате RTF
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  
TDashedBrush: TStrokeBrush|Пунктирная кисть
  procedure SetDashArray(const ADashArray: array of TFloat)|Установка массива пунктиров
  property DashOffset: TFloat|Расстояние между пунктирными линиями

TDataModule: TComponent|TDataModule централизует обработку невизуальных компонентов в приложении.
  property Name: String|Имя элемента
  property OldCreateOrder: Boolean
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  
TDateTimePicker: TWinControl|Окно выбора даты-времени (календарь)
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BevelWidth: Integer|Ширина скоса
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property CalAlignment: TDTCalAlignment|Выравнивает панель календаря по левой или правой стороне компонента
  property CalColors: TMonthCalColors|Цвет месяцев в календаре
  property Checked: Boolean|Состояния установленной галочки (ключено/выключено)
  property Color: TColor32|Цвет элемента
  property Columns: Integer|Количество колонок
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Date: TDateTime|Текущая дата
  property DateFormat: TDTDateFormat|Формат даты
  property DateMode: TDTDateMode|Режим даты
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property DropDownCount: Integer|
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Format: String|Определяет формат строки даты-времени. Например: 'Сегодняшняя дата:' MMM dd, yyyy будет отображена как "Сегодняшняя дата: Apr 01, 2016"
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImeMode: TImeMode|Задаёт режим IME (input method editor), режим ввода теста.
  property ImeName: String|Задаёт имя режима ввода текста IME (input mode editor)
  property Kind: TDateTimeKind|Тип даты-времени
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MaxDate: TDateTime|Максимальная дата
  property MinDate: TDateTime|Минимальная дата
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowCheckbox: Boolean|Показывать 
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property TabWidth: Integer|Ширина табуляции
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Time: TDateTime
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TDisturbanceTransformation: TTransformation|Преобразование TBitmap32 (помехи)
  property Disturbance: TFloat|Значение величины коэффициента помех
  
TDraftResampler: TLinearResampler|Фильтр преобразования изображений
  property PixelAccessMode: TPixelAccessMode|Режим доступа к пикселям изображения
  
TEdit: TWinControl|Поле редактирования текста
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BevelWidth: Integer|Ширина скоса
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TBorderStyle|Определяет:\n* вид заголовка формы\n* доступные кнопки в заголовке формы\n* отображение строки меню поведение границ формы
  property CharCase: TEditCharCase|Регистр символов
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property HideSelection: Boolean|Скрывать выделение, если элемент находится не в фокусе
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImeMode: TImeMode|Задаёт режим IME (input method editor), режим ввода теста.
  property ImeName: String|Задаёт имя режима ввода текста IME (input mode editor)
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MaxLength: Integer|Задает максимальное число символов, которое пользователь может ввести в редактируемой части поля.
  property Name: String|Имя элемента
  property OEMConvert: Boolean|Определяет, что символы, вводимые в поле ввода преобразуются из ANSI в OEM, а затем обратно в ANSI.
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PasswordChar: Char|Символ, который будет отображаться всесто настоящих символов текста при парольном методе ввода
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ReadOnly: Boolean|Режим "Только чтение" - запрещает изменять значения или состояние элемента
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Text: String|Введённый текст
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
 
TEnumVariant: TObject|Класс для создания коллекции с возможностью обхода элементов по порядку
  function Create(const aEnumVariant: Variant): Constructor|Создание объекта (конструктор)
    aEnumVariant - коллекция
  function Next(var aItem: Variant): Boolean|Переход на следующий элемент коллекции
  procedure Reset|Сброс позиции на первый элемент коллекции
  
TFileStream: TStream|Позволяет создать поток для работы с файлами. При этом поток работает с файлом без учета типа хранящихся в нем данных.
  function Create(Filename: String; Mode: Word): Constructor|Создание объекта (конструктор) 
    Filename - путь и имя файла
    Mode - определяет режим работы с файлом. Он составляется из флагов режима открытия:\nfmCreate — файл создается;\nfmOpenRead — файл открывается для чтения;\nfmopenwrite — файл открывается для записи;\nfmOpenReadWrite — файл открывается для чтения и записи.\nИ флагов режима совместного использования:\nfmShareExciusive — файл недоступен для открытия другими приложениями;\nfmShareDenyWrite — другие приложения могут читать данные из файла; \nfmShareDenyRead — другие приложения могут писать данные в файл;\nfmShareDenyNone — другие приложения могут производить с файлом любые операции.
  
TFishEyeTransformation: TTransformation|Преобразование TBitmap32 - эффект "Рыбий глаз"

TFixedPoint: TObject|Структура, хранящая координаты X и Y, которые заданы типом TFixed
  function Create(aX, aY: TFixed): Constructor|Создание объекта (конструктор)
    aX - координата X
    aY - координата Y
  property X: TFixed|Координата X
  property Y: TFixed|Координата Y
  
TFixedRect: TObject|Структура, хранящая координаты прямоугольника, которые заданы типом TFixed
  function Create(aLeft, aTop, aRight, aBottom: TFixed): Constructor|Создание объекта (конструктор)
    aLeft - координата X левого края
    aTop - координата Y верхнего края
    aRight - координата X правого края
    aBottom - координата Y нижнего края
  property Bottom: TFixed|Координата Y нижнего края
  property Left: TFixed|Координата X левого края
  property Right: TFixed|Координата X правого края
  property Top: TFixed|Координата Y верхнего края
  
TFlattenedPath: TCustomPath|Структура, хранящая путь из точек как массив точек с типом Fixed и Float
  property FixedPath: TArrayOfArrayOfFixedPoint|Массив точек с типом TFixedPoint
  property FixedPoints: TArrayOfFixedPoint|Массив точек с типом TFixedPoint
  property Path: TArrayOfArrayOfFloatPoint|Массив точек с типом TFloatPoint
  property Points: TArrayOfFloatPoint|Массив точек с типом TFloatPoint
  
TFloatPoint: TObject|Структура, хранящая координаты X и Y, которые заданы типом TFloat
  function Create(aX, aY: TFloat): Constructor|Создание объекта (конструктор)
    aX - координата X
    aY - координата Y
  property X: TFloat|Координата X
  property Y: TFloat|Координата Y

TFloatRect: TObject|Структура, хранящая координаты прямоугольника, которые заданы типом TFloat
  function Create(aLeft, aTop, aRight, aBottom: TFloat): Constructor|Создание объекта (конструктор)
    aLeft - координата X левого края
    aTop - координата Y верхнего края
    aRight - координата X правого края
    aBottom - координата Y нижнего края
  property Bottom: TFloat|Координата Y нижнего края
  property Left: TFloat|Координата X левого края
  property Right: TFloat|Координата X правого края
  property Top: TFloat|Координата Y верхнего края
  
TFont: TPersistent|Шрифт
  function Create: Constructor|Создание объекта (конструктор)
  property Charset: String|Определяет, набор символов шрифта.
  property Color: TColor32|Определяет цвет текста.
  property Height: Integer|Характеризует высоту шрифта в пикселах. 
  property Name: String|Семейство (имя) шрифта.
  property Orientation: Integer|Ориентация текстовых символов (угол)
  property Pitch: TFontPitch|Определяет способ установки ширины символов.
  property Size: Integer|Размер шрифта в кеглях (пунктах)
  property Style: TFontStyles|Стиль шрифта: полужирный, курсив, подчеркнутый, перечеркнутый.
  
TFontDialog: TCommonDialog|Диалоговое окно выбора шрифта
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Device: TFontDialogDevice|Устройство, связанное с диалогом
  property Font: TFont|Используемый шрифт
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property MaxFontSize: Integer|Максимальный размер шрифта (высота в пикселях)
  property MinFontSize: Integer|Минимальный размер шрифта (высота в пикселях)
  property Name: String|Имя окна
  property Options: TFontDialogOptions|Структура опций окна
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем

TForm: TCustomForm|Форма (окно)
  property Action: TBasicAction|Определяет действие, связанное с элементом управления.
  property ActiveControl: TWinControl|Активный элемент управления на форме (который находится в данный момент в фокусе)
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property AlphaBlend: Boolean|Определяет использование альфа-канала формы (прозрачность)
  property AlphaBlendValue: Integer|Значение альфа-канала формы (определяет прозрачность)
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoScroll: Boolean|Автоматическое появление полос прокрутки, если элементы не входят в окно формы
  property AutoSize: Boolean|Автоматически подгонять размер под размер контейнера, в котором находится элемент
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderIcons: TBorderIcons|
  property BorderStyle: TFormBorderStyle|Стиль границ окна
  property BorderWidth: Integer|Ширина линии границы
  property Caption: String|Надпись
  property ClientHeight: Integer|Высота клиентской области
  property ClientWidth: Integer|Ширина клиентской области
  property Color: TColor32|Цвет формы
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DefaultMonitor: TDefaultMonitor|Монитор по-умолчанию
  property DockSite: Boolean|Определяет, привязан ли объект к контейнеру, в который встроен данный компонент
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property FormStyle: TFormStyle|Стиль формы
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpFile: String|Файл справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  roperty HorzScrollBar: TControlScrollBar|Элемент управления - горизонтальная прокрутка
  property Icon: TIcon|Иконка формы
  property KeyPreview: Boolean|Определяет, должна ли форма получать события от клавиатуры до того как станет активной.
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Menu: TMainMenu|Хранит главное меню, из которого панель заполняется кнопками
  property Name: String|Имя элемента
  property ObjectMenuItem: TMenuItem|Меню формы
  property OldCreateOrder: Boolean|Указывает, когда происходят события OnCreate и OnDestroy.
  property Padding: TPadding|Отступ элемента от края содержащего его контейнера
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property PixelsPerInch: Integer|Представляет пропорцию шрифта на компьютере, на котором форма была разработана.
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property PopupMode: TPopupMode|Определяет, как форма верхнего уровня ведет себя по отношению к WS_POPUP стилю.
  property PopupParent: TCustomForm|Устанавливает порядок сложенных форм, которые не могут быть изменены.
  property Position: TPosition|Представляет размер и размещение формы.
  property PrintScale: TPrintScale|Представляет пропорции печатном виде.
  property Scaled: Boolean|Определяет, в соответствии ли форма с установленным значением свойства PixelsPerInch.
  property ScreenSnap: Boolean|Определяет, прилипает ли форма к краю экрана.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property SnapBuffer: Variant|Определяет расстояние для прилипания к краю экрана.
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property TransparentColor: Boolean|Указывает, используется ли прозрачный цвет в форме.
  property TransparentColorValue: Integer|Цвет прозрачности, когда TransparentColor выставлен в True
  property UseDockManager: Boolean|Определяет, используется ли док-менеджер.
  property VertScrollBar: TControlScrollBar|Вертикальная полоса прокрутки
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  property WindowMenu: TMenuItem|Главное меню
  property WindowState: TWindowState|Представляет, как выглядит форма на экране
  
TGaussianKernel: TWindowedSincKernel|Gaussian-ядро фильтра преобразования изображений
  property Sigma: Integer|Значение величины размытия
  property Width: Integer|Ширина в пикселях
  
TGraphic: TPersistent|TGraphic это абстрактный базовый класс для таких типов объектов, как иконки, растровые изображения и метафайлы, которые могут хранить и отображать визуальные образы.
  function Create: Constructor|Создание объекта (конструктор)
  procedure LoadFromFile(const Filename: string)|Загрузить из файла 
    Filename - путь и имя файла
  procedure SaveToFile(const Filename: string)|Сохранить в файл 
    Filename - путь и имя файла
  property Height: Integer|Высота в пикселях 
  property Width: Integer|Ширина в пикселях
  
TGraphicControl: TControl|Родитель всех графических элементов управления. Он наследует все свойства, методы и события TControl, и добавляет свойство и метод, которые обращаются к его поверхности рисования.
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Width: Integer|Ширина в пикселях
 
TGroupBox: TWinControl|Компонент представляет собой стандартный прямоугольник группировки Windows, используемый для группировки элементов на форме. Когда компонент управления находится в группе, GroupBox становится родителем этого компонента.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Caption: String|Надпись
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DockSite: Boolean|Определяет, привязан ли объект к контейнеру, в который встроен данный компонент
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property HideSelection: Boolean|Скрывать выделение, если элемент находится не в фокусе
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Padding: TPadding|Отступ элемента от края содержащего его контейнера
  property ParentBackground: Boolean|Определяет, используется ли фон компоненты родителя
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TGrowBrush: TNestedBrush|Одна из видов кистей
  property GrowAmount: TFloat
  property JoinStyle: TPolyJoinStyle
  property MiterLimit: TFloat
  
THammingKernel: TWindowedSincKernel|Hamming-ядро фильтра преобразования изображений
  property Width: Integer|Ширина в пикселях
  
THannKernel: TWindowedSincKernel|Hann-ядро фильтра преобразования изображений
  property Width: Integer|Ширина в пикселях

THermiteKernel: TCustomKernel|Hermite-ядро фильтров преобразований изображений
  property Bias: Integer|Смещение
  property Tension: Integer|Величина растяжения
  
THmsHTTPMessage: TObject|Класс для работы с HTTP сообщениями. Может использоваться в скриптах "Обработка HTTP-запросов", где встроенные переменные HttpRequest и HttpResponse имеют именно этот тип.
  function LoadContentFromFile(const aFileName: string; aSetLastModified: Boolean): Boolean|Загрузка содержания HTTP сообщения из файла
    aFileName - путь и имя файла, откуда будут загружены данные
    aSetLastModified - флаг определяющий, будет ли установлена дата последней модификации файла
  property Chunked: Boolean|Определяет блочность данных
  property Content: String|Содержимое HTTP запроса или ответа
  property Header: String|HTTP заголовки строкой
  property IsBinary: Boolean|Определяет, является ли сообщение бинарными данными
  property IsError: Boolean|Определяет, произошла ли ошибка
  property LocalInfo: String|Локальная информация о статусе запроса
  property MessageHeader: THmsMessageHeader|Объект HTTP заголовков
  property RemoteInfo: String|Информация, полученная от удалённого сервера
  
THmsIMDBInfo: THmsIMDBItemList|Объект хранения информации с IMDB
  function DisplayText: String|Текст всей информации
  function SaveToString: String|Сохранить представление объекта в строку
  procedure LoadFromString(const aText: String)|Загрузить данные объекта из строки
    aText - загружаемые данные в виде текста
  
THmsIMDBItem: TObject|Элемент информации IMDB
  property ChildList: THmsIMDBItemList|Подчинённый список информации с IMDB
  property Image: String|Ссылка на изображение
  property Name: String|Имя элемента
  property Value: String|Значение элемента
  
THmsIMDBItemList: TList|Список информационных элементов с IMDB
  function AddItem(const aName: string; const aValue: string; const aImage: string = ): THmsIMDBItem|Добавление информационного элемента в список
    aName - имя элемента
    aValue - значение элемента
    aImage - ссылка на изображение
  function FindItem(const aName: string): THmsIMDBItem|Поиск информационного элемента по заданному имени
    aName - имя элемента, который требуется найти
  index property Items(p0: Integer): THmsIMDBItem|Доступ к информационным элементам
    p0 - индекс информационного элемента IMDB
  procedure Clear|Очистка коллекции или набора подчинённых объектов 
  property Count: Integer|Количество элементов
  
THmsMessageHeader: TList|HTTP заголовки (HTTP headers)
  function GetFieldValue(const aFieldName: string; var aFieldValue: string): Boolean|Получение значения определённого заголовка в переменную. Возвращает True, если значение по заданному имени присутствует и получено.
    aFieldName - имя заголовка
	aFieldValue - переменная, в которую будет занесено значение заголовка
  index property Fields(aIndex: Integer): THmsMessageHeaderField|Доступ к полям заголовка по индексу
    aIndex - индекс поля заголовка
  index property Values(aName: String): String|Доступ к значениям полей заголовка по имени
    aName - имя поля заголовка
  procedure AddField(const aFieldName, aFieldValue: string)|Добавление поля заголовка
    aFieldName - имя поля заголовка
	aFieldValue - значение поля заголовка
  procedure DeleteField(const aFieldName: string)|Удаление поля заголовка
    aFieldName - имя поля заголовка
  property FirstLine: String|Первая строка заголовка
  property Method: String|Метод HTTP (GET,POST,HEAD,PUT,DELETE)
  property ReasonPhrase: String|Расшифровка статуса (кода возврата)
  property RequestURI: String|URL запроса
  property StatusCode: String|Код возврата запроса
  property Text: String|Представление заголовков в виде строки
  property Version: String|Версия HTTP
  
THmsMessageHeaderField: TObject|Поле заголовка
  property Name: String|Имя поля заголовка
  property Value: String|Значение поля заголовка
  
THmsScriptFileTags: TObject|Класс для хранения информации в виде тегов
  function GetPicture(var aPictureData, aPictureType, aPictureDescription: string): Boolean|Получение информации о изображении в указанные переменные. В случае удачи возвращается True.
  function GetTagCount: Integer|Количество тегов
  function GetTagDescription(aTagIndex: Integer): String|Получение описание тега по индексу
    aTagIndex - индекс тега
  function GetTagID(aTagIndex: Integer): String|Получение ID тега по индексу
    aTagIndex - индекс тега
  function GetTagName(aTagIndex: Integer): String|Получение имени тега по индексу
    aTagIndex - индекс тега
  function GetTagValue(const aTagID: string; aValueIndex: Integer = 0): Variant|Получение значение тега по его ID
    aTagID - ID тега
    aValueIndex - индекс значения тега. Необязательный параметр.
  
THmsScriptMediaItem: TObject|Объект базы медиа-ресурсов программы Домашний медиа-сервер. Это может быть ссылка на медиа-файл или папка или служебный элемент. В общем случае - элемент дерева базы данных медиа-ресурсов программы.
  function AddFolder(const aFolderPath: string; aForceFolder: Boolean = False; aFolderClassID: Integer = -1): THmsScriptMediaItem|Добавление папки (каталога). По-умолчанию (флаг aForceFolder не установлен), если вызывается для элемента папки, то создаёт подкаст. Если для подкаста - создаёт папку подкаста.
    aFolderPath - значение поля "Путь". Запоминается в параметрах медиа-ресурса под идентификатором mpiFilePath. При добавлении, если данный родитель уже содержит папку или дочерний элемент с таким значением, то новый элемент не создаётся, а метод возвращает найденный.
	aForceFolder - флаг, указывающий создавать именно папку, а не подкаст. Необязательный.
	aFolderClassID - ClassID создаваемого элемента (необязательный). Задаёт принудительно тип нового элемента.\nНапример:\n51 - папка подкастов раздела "Видео";\n53 - подкаст раздела "Видео";\n32 - динамическая папка скриптов...\nПосмотреть значения ClassID можно у сохранённых файлов подкастов или плейлистов с расширением .hdf.
  function AddItem(const aFolderPath: string; aItem: THmsScriptMediaItem): THmsScriptMediaItem|Добавление элемента в папку базы данных медиа-ресурсов. В качестве второго параметра указывается уже созданный элемент, но при добавлении будет создан новый с точно такими же значениями полей параметров.
    aFolderPath - путь добавления элемента. Возможно указание вложенных подпапок вида "Подпапка1\Подпапка2", в этом случае будет создана "Подпапка1", в ней "Подпапка2", а уже в последней сам элемент.
	aItem - добавляемый элемент базы данных. Будет создан новый элемент с такими же значениями полей параметров.
  function FindItemByProperty(const aPropertyID: Integer; const aPropertyValue: string): THmsScriptMediaItem|Найти элемент базы данных по значению параметра
    aPropertyID - идентификатор параметра элемента. Можно использовать встроенные константы, начинающиеся на mpi, например: mpiFilePath, mpiTitle и прочие.
    aPropertyValue - значение параметра элемента
  function GetVisibleChildItems(aExcludeFolders: Boolean = True): THmsScriptMediaItemList|Возвращает список видимых элементов
    aExcludeFolders - указывает, исключать ли из получаемого списка папки.
  function WebLink(aSource: THmsScriptMediaItem): String|Возвращает ссылку на элемент для веб навигации вида /MediaServer/Folders/<ItemID>, где <ItemID> - ItemID элемента.
    aSource - папка источник
  index property ChildItems(aIndex: Integer): THmsScriptMediaItem|Доступ к подчинённым элементам по индексу
    aIndex - индекс элемента (начиная с 0)
  index property OwnProperties(aIndex: Integer): Variant|Доступ к собственным параметрам. Полезен только тогда, когда элемент является ссылкой на другой (как элементы в папке "Транскодирование").
    aIndex - индекс собственного параметра (начиная с 0)
  index property Properties(aIndex: Integer): Variant|Доступ к параметрам медиа-ресурса (элемента базы данных).\nИндекс задаётся числом или костантой, начинающейся на "mpi" (mpiTitle, mpiFilePath, mpiThumbnail, mpiTimeLenght, ...).
    aIndex - индекс параметра (начиная с 0). Можно использовать встроенные константы, начинающиеся на mpi, например:\nmpiFilePath - , mpiTitle, mpi и прочие.
  procedure CheckChildItems|Проверка подчинённых ссылок
  procedure CopyProperties(aSource: THmsScriptMediaItem; const aProperties: array of Integer)|Копирование значения параметров указанных идентификаторов
    aSource - Объект базы данных программы, откуда будут скопированы значения
	aProperties - массив идентификаторов копируемых параметров (например: [mpiTimeLenght, mpiComment, mpiThumbnail])
  procedure Delete|Удаление текущего объекта из коллекции 
  procedure DeleteChildItems|Удаление всех дочерних элементов
  procedure LoadMetadataFromCache|Загрузка метаданных из кеша
  procedure RetrieveProperties|Получение и заполнение параметров медиа-ресурса.
  procedure SaveMetadataToCache|Сохранение метаданных в кеш
  procedure Sort(const aSortOrder: string)|Сортировка элементов
    aSortOrder - направление и наименование поля сортировки. Можно указывать имя параметра по которому нужно отсортировать. Перед именем можно ставить знак "+" - по-возрастанию или знак "-" - по-убыванию. Например:\n"+mpTitle" - сортировка по названию, по возрастанию (алфавиту);\n"-mpYear" - сортировка по годам, по убыванию;
  property ChildCount: Integer|Количество подчинённых элементов
  property HasChildItems: Boolean|Определяет, имеются ли подчинённые элементы
  property IsFolder: Boolean|Определяет, является ли данный элемент папкой
  property IsLink: Boolean|Определяет, является ли данный элемент ссылкой на медиа-ресурс
  property IsServiceItem: Boolean|Определяет, является ли данный элемент сервисным (папка "Транскодирование", закладка и проч.)
  property ItemBookmark: String|
  property ItemClassID: Integer|Идентификатор класса элемента
  property ItemClassName: String|Имя класса данного элемента (TVideoPodcastsFolderItem, TMediaPodcastsCollection...)
  property ItemID: String|Уникальный идентификатор элемента в базе данных программы
  property ItemIDPath: String|
  property ItemOrigin: THmsScriptMediaItem|Оригинальный элемент базы данных, на который ссылается данная ссылка
  property ItemParent: THmsScriptMediaItem|Родительский элемент базы данных, содержащая данный элемент
  property ItemSafeID: String|"Безопасный" ItemID элемента. Длиной 16 символов без знаков "-".
  property MediaType: TMediaType|Тип медиа-ресурса (mtVideo,mtAudio,mtImage,mtIsoDisk,mtText,mtUnknown)
  property ThumbnailExists: Boolean|Определяет наличие миниатюры (изображения)
  property ThumbnailFileName: String|Путь и имя файла изображения элемента
  property ThumbnailID: String|ID изображения элемента в кеше метаданных
  property ThumbnailKey: String|Ключ изображения элемента в кеше метаданных
  property TranscodingProfile: String|Профиль транскодирования (например: "Фильмы (основной)"). Если не указан, будет использоваться профиль у родительских папок (если указан у них) или указанный в настройке программы или устройства.
  property WebImageName: String|Имя картинки в веб навигации
  
THmsScriptMediaItemList: TList|Список элементов базы данных программы HMS
  function IndexOf(const aItemID: string): Integer|Возвращает индекс элемента по указанному ItemID
  index property Items(aIndex: Integer): THmsScriptMediaItem|Доступ элементу списка по индексу
    aIndex - индекс элемента
  
THmsScriptUPnPBase: TObject|Базовый класс UPnP устройств и сервисов, используемых в программе Домашний медиа-сервер
  function ExpandUrl(const aUrl: string): String|Возвращаем полное представление ссылок для указанной ссылки, даже если она передаётся как относительная.
  property DeviceType: THmsUPnPDeviceType|Тип устройства (udtDeviceMediaRenderer, udtDeviceMediaServer, udtDeviceRoot, ...)
  property HttpServerAddr: String|IP адрес HTTP сервера для веб навигации
  property IpAddress: String|IP адрес устройства
  property ServerAddress: String|Путь до корня веб-навигации
  property UrlBase: String|URL база для ссылок. Указывается протокол и доменное имя, например http://server.com
  
THmsScriptUPnPDevice: THmsScriptUPnPBase|UPnP-устройство
  function FindService(aServiceType: THmsUPnPDeviceType): THmsScriptUPnPService|Найти UPnP-сервис по типу устройства
    aServiceType - тип UPnP-сервиса (udtDeviceMediaRenderer, udtDeviceMediaServer, ...)
  index property Properties(aIndex: THmsUPnPDeviceProperty): Variant|Доступ к свойствам UPnP устройства по индексу
    aIndex - индекс свойства
  property ChildDeviceList: THmsScriptUPnPDeviceList|Список подчинённых UPnP-устройств
  property ServiceList: THmsScriptUPnPServiceList|Список подчинённых UPnP-сервисов
  
THmsScriptUPnPDeviceList: TList|Список UPnP-сервисов
  function Create(aDeviceType: Integer = 3; aServiceType: Integer = 0): Constructor|Создание объекта (конструктор)
    aDeviceType - тип UPnP-устройства (udtDeviceMediaRenderer, udtDeviceMediaServer, ...)
    aServiceType - тип UPnP-сервиса (udtDeviceMediaRenderer, udtDeviceMediaServer, ...)
  index property Items(aIndex: Integer): THmsScriptUPnPDevice|Доступ к элементам списка UPnP-сервисов по индексу
    aIndex - индекс элемента в списке (начиная с 0)
  
THmsScriptUPnPService: THmsScriptUPnPBase|UPnP-сервис
  function BuildActionContent(const aActionName: string; const aActionParams: array of string; aProlog: Boolean = False): string|Возвращает построенный ActionContent (неизвестная функция, нужно уточнение)
    aActionName - имя действия
    aActionParams - параметры действия. Передаются как массив строк.
    aProlog - неизвестно что это такое. Необязательный параметр.
  function InvokeUPnPAction(const aActionName: string; const aActionParams: array of string): Integer 
  function InvokeUPnPActionWithResponseItem(const aActionName, aActionContent: string; var aResponseItem: TXmlItem): Integer 
  function InvokeUPnPActionWithResultValues(const aActionName: string; const aActionParams: array of string; const aActionResultNames: array of string; var aActionResultValues: Variant): Integer 
  procedure FreeResponseItem(aResponseItem: TXmlItem)
  property ControlURL: String
  property EventSubURL: String
  property SCPDURL: String
  property ServiceId: String|ID UPnP-сервиса
  property ServiceType: String|Тип UPnP-сервиса
  
THmsScriptUPnPServiceList: TList|Список UPnP-сервисов
  index property Items(aIndex: Integer): THmsScriptUPnPService|Доступ к элементам списка по индексу
    aIndex - индекс элемента в списке (начиная с 0)
  
THmsVideoSlideShow: TObject|Класс для создания слайд-шоу и эффектов прокрутки изображений
  function Create(const aVideoFileName: string; aVideoWidth, aVideoHeight: Integer; aVideoFrameRate: Extended): Constructor|Создание объекта (конструктор)
    aVideoFileName - путь и имя видео файла, куда будет сохраняться результат
    aVideoWidth - ширина кадра видео в пикселях
    aVideoHeight - высота кадра видео в пикселях
    aVideoFrameRate - частота кадров видео, куда будет сохраняться результат
  function RollBitmap(aBitmap: TBitmap32; aBeforeRollStayTime, aRollStartY, aRollDelay, aRollDeltaY, aAfterRollStayTime: Integer; aStretchFilter: TStretchFilter = sfLanczos; const aSlideShowStyle: Variant = 0): Boolean|Прокрутка изображения Bitmap
    aBitmap - исходное обрабатываемое изображение
    aBeforeRollStayTime - пауза в милисекундах перед началом прокрутки
    aRollStartY - координата Y начала области прокрутки
    aRollDelay - скорость шага прокрутки в милисекундах
    aRollDeltaY - значение шага прокрутки в пикселях
    aAfterRollStayTime - пауза в милисекундах после прокрутки
    aStretchFilter - фильтр сглаживания (sfNone, sfCosine, sfDraft, sfLanczos, sfLinear, sfMitchell, sfNearest, sfSpline). Необязательный параметр. По-умолчанию используется sfLanczos.
    aSlideShowStyle - стиль слайд шоу. Необязательный параметр. Указывается номер стиля. По-умолчанию используется 0. (более точного описания пока нет)
  function WriteFrame: Boolean|Записать кадр. Возвращает True, если кадр в результирующее видео записан.
  procedure Lock|Блокировка работы слайд-шоу
  procedure SetBitmap(aBitmap: TBitmap32; const aSlideShowStyle: Variant = 0; aStretchFilter: TStretchFilter = sfLanczos; aStretchAlways: Boolean = False; aProportional: Boolean = True) 
  procedure Start|Запуск слайд-шоу в работу
  procedure Stop|Остановка работы слайд-шоу
  procedure Unlock|Разблокировка работы слайд-шоу
  property Started: Boolean|Определяет, запущена ли слайд-шоу в работу
  
TIconOptions: TPersistent|Опции иконок
  property Arrangement: TIconArrangement|Стиль выравнивания иконок (iaLeft - по левому краю, iaTop - по верхнему краю)
  property AutoArrange: Boolean|Определяет автоупорядочивание иконок
  property WrapText: Boolean|Определяет возможность переноса текста на другую строку
  
TImage: TGraphicControl|Картинка на форме. Служит контейнером изображения.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoSize: Boolean|Автоматически подгонять размер под размер контейнера, в котором находится элемент
  property Center: Boolean|Определяет, центрировать ли изображение
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property IncrementalDisplay: Boolean|Разрешает/запрещает показ большого изображения по мере его загрузки Центральное свойство класса
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property Proportional: Boolean|Разрешает/запрещает пропорциональное изменение размера изображения под размер контейнера
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Stretch: Boolean|Разрешает/запрещает изменение размера изображения под размер контейнера без учёта пропорций
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Transparent: Boolean|Прозрачность
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TIniFile: TCustomIniFile|Класс для работы с текстовыми INI файлами
  function ReadString(const Section, Ident, Default: String): String|Получение значения ключа по указанной секции и его идентификатору
    Section - имя секции
    Ident - идентификатор считываемого ключа
    Default - значение по-умолчанию, которое будет возвращено, в случае отсутствия строки по заданным параметрам
  procedure DeleteKey(const Section, Ident: String)|Удаление ключа
    Section - имя секции
    Ident - идентификатор удаляемого ключа
  procedure EraseSection(const Section: String)|Очистка всей секции
    Section - имя секции, которая будет очищена
  procedure LoadIniFileFromStream(oStream: TStream)|Загрузка данных из объекта TStream
    oStream - объект TStream, из которого будет загружена информация ini файла
  procedure ReadSection(const Section: String; Strings: TStrings)|Считывание ключей и значений всей секции в объект TStrings
    Section - имя секции
    Strings - объект TStrings, в который будет занесена информация
  procedure ReadSectionValues(const Section: String; Strings: TStrings)|Считывание только значений всей секции в объект TStrings
    Section - имя секции
    Strings - объект TStrings, в который будет занесена информация
  procedure ReadSectionValuesEx(const Section: String; Strings: TStrings)|Считывание только значений всей секции в объект TStrings
    Section - имя секции
    Strings - объект TStrings, в который будет занесена информация
  procedure ReadSections(Strings: TStrings)|Считывание имён секций в объект TStrings
    Strings - объект TStrings, в который будет занесена информация
  procedure SaveIniFileToStream(oStream: TStream)|Запись информации в объект TStream
    oStream - объект TStream, в который будет записана информация ini файла
  procedure SetStrings(List: TStrings)|Считывание информации из объекта TStrings
    List - объект TStrings, из которого будет занесена информация
  procedure WriteString(const Section, Ident, Value: String)|Установка ключа и его значения по указанной секции
    Section - имя секции
    Ident - идентификатор ключа
    Value - значение ключа
  
TJsonArray: TObject|Массив объекта TJson
  index property B(p0: Integer): Boolean|Доступ к значению массива по индексу. Тип возвращаемого значения всегда Boolean.
    p0 - индекс значения в массиве (начинается с 0)
  index property C(p0: Integer): Currency|Доступ к значению массива по индексу. Тип возвращаемого значения всегда Currency.
    p0 - индекс значения в массиве (начинается с 0)
  index property D(p0: Integer): Double|Доступ к значению массива по индексу. Тип возвращаемого значения всегда Double.
    p0 - индекс значения в массиве (начинается с 0)
  index property I(p0: Integer): Integer|Доступ к значению массива по индексу. Тип возвращаемого значения всегда Integer.
    p0 - индекс значения в массиве (начинается с 0)
  index property N(p0: Integer): TJsonObject|Доступ к значению массива по индексу. Тип возвращаемого значения всегда TJsonObject.
    p0 - индекс значения в массиве (начинается с 0)
  index property O(p0: Integer): TJsonObject|Доступ к значению массива по индексу. Тип возвращаемого значения всегда TJsonObject.
    p0 - индекс значения в массиве (начинается с 0)
  index property S(p0: Integer): String|Доступ к значению массива по индексу. Тип возвращаемого значения всегда String.
    p0 - индекс значения в массиве (начинается с 0)
  property Length: Integer|Количество элементов в массиве
  
TJsonObject: TObject|Объект JSON представления данных
  function AsArray: TJsonArray|Возвращает текущий объект как тип JSON-массив c типом TJsonArray
  function AsBoolean: Boolean|Возвращает текущий объект c типом Boolean
  function AsCurrency: Currency|Возвращает текущий объект c типом Currency
  function AsDouble: Double|Возвращает текущий объект c типом Boolean
  function AsInteger: Integer|Возвращает текущий объект c типом Integer
  function AsObject: TJsonTableString|Возвращает текущий объект c типом TJsonTableString
  function AsString: String|Возвращает текущий объект c типом String
  function Create: Constructor|Создание объекта (конструктор)
  function IsType(AType: TJsonType): Boolean|Проверяет, является ли данный объект указанным типом
    AType - тип данных (jtArray, jtBoolean, jtCurrency, jtDouble, jtInt, jtNull, jtObject, jtString)
  function SaveToString: String|Сохранить представление объекта в строку
  index property A(p0: String): TJsonArray|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда TJsonArray.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property B(p0: String): Boolean|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда Boolean.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property C(p0: String): Currency|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда Currency.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property D(p0: String): Double|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда Double.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property I(p0: String): Integer|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда Integer.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property N(p0: String): TJsonObject|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда TJsonObject.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property Names(p0: Integer): String|Доступ к именам объектов JSON по индексу
    p0 - индекс объекта (начинается с 0)
  index property O(p0: String): TJsonObject|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда TJsonObject.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property S(p0: String): String|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда String.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property Values(p0: Integer): TJsonObject|Доступ к объектам JSON по индексу
    p0 - индекс объекта (начинается с 0)
  procedure LoadFromFile(const aFileName: String)|Загрузить данные объекта из файла
    aFileName - путь и имя файла в котором храниться представление JSON данных, которые будут загружены.
  procedure LoadFromString(const aText: String)|Загрузить данные объекта из строки
    aText - текст в формате JSON
  procedure SaveToFile(const aFileName: String)|Сохранить данные объекта в файл
    aFileName - путь и имя файла в который будут сохранены данные в JSON представлении
  property Count: Integer|Количество подчинённых элементов
  property DataType: TJsonType|Тип данных данного объекта (jtArray, jtBoolean, jtCurrency, jtDouble, jtInt, jtNull, jtObject, jtString)
                        
TJsonTableString: TObject|Таблица объектов JSON представления
  function Exists(const aPath: string): Boolean|Проверка существования объекта по указанному пути, например: "Item\Thumbnail\Url"
  function Find(const aPath: string; var aValue: TJsonObject): Boolean|Поиск объекта по по указанному пути. Найденный объект присваивается переменной, указанной во втором параметре. В случае, когда объект найден, возвращается True.
  function GetNames: TJsonObject|Возвращает объект с типом TJsonObject, который будет содержать список имён существующих объектов в данной таблице
  function GetValues: TJsonObject|Возвращает объект с типом TJsonObject, который будет содержать список значений существующих объектов в данной таблице
  index property B(p0: String): Boolean|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда Boolean.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property C(p0: String): Currency|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда Currency.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property D(p0: String): Double|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда Double.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property I(p0: String): Integer|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда Integer.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property N(p0: String): TJsonObject|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда TJsonObject.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property O(p0: String): TJsonObject|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда TJsonObject.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"
  index property S(p0: String): String|Доступ к значению объекта JSON по ключу. Тип возвращаемого значения всегда String.
    p0 - ключ значения. Это может быть имя значения или даже путь по вложенным объектам, типа: "Item\Thumbnail\Url"

TKernelResampler: TCustomResampler|Общий класс для передискретизации изображений с помощью произвольных фильтров
  property Kernel: TCustomKernel|Ядро фильтра преобразований изображений
  property KernelClassName: String|Имя класса ядра преобразований
  property KernelMode: TKernelMode|Режим ядра
  property PixelAccessMode: TPixelAccessMode|Режим доступа к пикселям изображения
  property TableSize: Integer|Размер таблиц
  
TLabel: TControl|Надпись на форме
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Alignment: TAlignment|Выравнивание компонента
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoSize: Boolean|Автоматически подгонять размер под размер контейнера, в котором находится элемент
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Caption: String|Текст надписи
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property EllipsisPosition: TEllipsisPosition
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property FocusControl: TWinControl
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Layout: TTextLayout
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowAccelChar: Boolean
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Transparent: Boolean
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  property WordWrap: Boolean|Включение или отключение переноса слов, если весь текст не входит.
  
TLanczosKernel: TWindowedSincKernel|Lanczos-ядро фильтра преобразования изображений
  property Width: Integer|Ширина в пикселях

TLinearKernel: TCustomKernel|Ядро фильтра преобразований изображений

TLinearResampler: TCustomResampler|Класс для передискретизации изображений с помощью произвольных фильтров
  property PixelAccessMode: TPixelAccessMode|Режим доступа к пикселям изображения

TList: TObject|Список значений
  function Add(Item: TObject): Integer|Добавление элемента списка
    Item - добавляемый элемент списка значений
  function IndexOf(Item: TObject): Integer|Возвращает индекс элемента в списке
    Item - элемент списка
  function Remove(Item: TObject): Integer|Удаление элемента списка
    Item - удаляемый элемент списка
  index property Items(p0: Integer): TObject|Доступ к элементам списка значений по его индексу
    p0 - индекс элемента списка (начиная с 0)
  procedure Clear|Очистка списка значений
  procedure Delete(Index: Integer)|Удаление элемента списка по его индексу
    Index - индекс элемента списка (начиная с 0)
  procedure Insert(Index: Integer; Item: TObject)|Вставка элемента списка по указанному индексу
    Index - индекс элемента списка (начиная с 0)
    Item - вставляемый элемент списка значений
  property Count: Integer|Количество элементов списка
  
TListBox: TCustomListBox|Стандартный для Windows список выбора, с помощью которого пользователь может выбрать один или несколько элементов выбора. В компоненте предусмотрена возможность программной прорисовки элементов, поэтому список может содержать не только строки, но и произвольные изображения.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoComplete: Boolean|Определяет возможность автоматического поиска элемента списка по первым символам набранным на клавиатуре
  property AutoCompleteDelay: Integer|Задержка автоматического поиска элемента списка по первым символам набранным на клавиатуре
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BevelWidth: Integer|Ширина скоса
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TBorderStyle|Определяет:\n* вид заголовка формы\n* доступные кнопки в заголовке формы\n* отображение строки меню поведение границ формы
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property ExtendedSelect: Boolean|Определяет возможность множественного выбора элементов списка с нажатием Shift и Ctrl клавишами
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImeMode: TImeMode|Задаёт режим IME (input method editor), режим ввода теста.
  property ImeName: String|Задаёт имя режима ввода текста IME (input mode editor)
  property IntegralHeight: Boolean|Вычисленная высота списка
  property ItemHeight: Integer|Высота одного элемента списка
  property Items: TStrings|Список элементов
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MultiSelect: Boolean|Определяет возможность множественного выделения
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ScrollWidth: Integer|Ширина полосы прокрутки
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Sorted: Boolean|Определяет, отсортирован ли список выбора по наименованию
  property Style: TListBoxStyle|Стиль списка выбора
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property TabWidth: Integer|Ширина табуляции
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TListColumn: TPersistent|Колонка элемента TList
  property Alignment: TAlignment|Выравнивание компонента
  property AutoSize: Boolean|Автоматически подгонять размер под размер контейнера, в котором находится элемент
  property Caption: String|Надпись
  property ImageIndex: Integer|Номер картинки
  property MaxWidth: Integer|Максимальная ширина
  property MinWidth: Integer|Минимальная ширина
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Width: Integer|Ширина в пикселях
  
TListColumns: TPersistent|Набор колонок элемента TList
  function Add: TListColumn|Добавление новой колонки
  index property Items(p0: Integer): TListColumn|Доступ к колонке по индексу
  
TListItem: TPersistent|Элемент строки списка TList
  function EditCaption: Boolean|Возможность редактирование текста в элементе управления
  procedure Delete|Удаление текущего объекта из коллекции
  property Caption: String|Надпись
  property Checked: Boolean|Состояния установленной галочки (ключено/выключено)
  property Data: Pointer|Произвольные данные
  property ImageIndex: Integer|Номер картинки
  property Selected: Boolean|Отмечен ли элемент галочкой
  property StateIndex: Integer|
  property SubItems: TStrings|Перечень значений следующих колонок
  
TListItems: TPersistent|Набор строк списка TList
  function Add: TListItem|Добавление новой строки
  index property Item(p0: Integer): TListItem|Доступ к строке по её номеру
  procedure BeginUpdate|Начало обновления списка (при этом на экране не будут отображаться изменения вплоть до вызова метода EndUpdate)
  procedure Clear|Очистка коллекции или набора подчинённых объектов 
  procedure Delete(Index: Integer)|Удаление строки по её номеру
  procedure EndUpdate|Конец обновления списка 
  property Count: Integer|Количество подчинённых элементов
  
TListView: TWinControl|Список значений (таблица)
  property Action: TBasicAction|Определяет действие, связанное с элементом управления.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property AllocBy: Variant|Позволяет распределять память под несколько элементов представления в виде списка в одном вызове, не заставляя систему распределять память при добавлении каждого элемента. При добавлении большого числа элементов к представлению в виде списка следует использовать AllocBy. Это упрощает код и предотвращает фрагментацию памяти. Значение AllocBy должно быть установлено равным числу элементов, добавляемых к элементу управления представлением в виде списка.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BevelWidth: Integer|Ширина скоса
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TFormBorderStyle|Стиль границ окна
  property BorderWidth: Integer|Ширина линии границы
  property Checkboxes: Boolean|Определяет отображение чекбоксов (элементов проставления отметок)
  property Color: TColor32|Цвет элемента
  property ColumnClick: Boolean|Определяет возможность клика мышкой на заголовке колонок
  property Columns: TListColumns|Колонки списка
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property FlatScrollBars: Boolean|Определяет вид плоских элементов прокрутки
  property Font: TFont|Используемый шрифт
  property FullDrag: Boolean|Определяет возможность полного перетаскивания объекта, а не его элементов
  property GridLines: Boolean|Определяет отображение линий сетки таблицы
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property HotTrack: Boolean|Заголовок вкладки (закладки) может слегка подсвечиваться, если над ним будет указатель мыши.
  property HotTrackStyles: THotTrackStyles|Стиль "горячего" выделения при наведении мышкой над элементом
  property HoverTime: Integer|Время срабатывания "горячего" выделения при наведении мышкой над элементом
  property IconOptions: TIconOptions|Опции значков
  property Items: TListItems|Элементы списка
  property LargeImages: TCustomImageList
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MultiSelect: Boolean|Определяет возможность множественного выделения
  property Name: String|Имя элемента
  property OwnerData: Boolean|Определяет, содержит ли компонент собственный тип данных элементов
  property OwnerDraw: Boolean|Определяет, содержит ли компонент собственную процедуру прорисовки элемента.
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: TColor32|Цвет родительского объекта
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ReadOnly: Boolean|Режим "Только чтение" - запрещает изменять значения или состояние элемента
  property RowSelect: Boolean|Выделение целой строкой всех столбцов сразу
  property ShowColumnHeaders: Boolean|Определяет, отображать ли заголовки колонок
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property ShowWorkAreas: Boolean|Определяет, отображать ли дополнительное рабочее пространство
  property SmallImages: TCustomImageList|Набор картинок для отображения маленьких значков
  property SortType: TSortType|Свойство SortType определяет, как сортируются элементы в элементе управления представлением в виде списка.
  property StateImages: TCustomImageList|Свойство StateImages определяет, какой компонент списка изображений является источником изображений состояний для элементов в представлении в виде списка.
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property ViewStyle: TViewStyle|Стиль отображения списка
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TMainMenu: TMenu|Главное меню формы
  property AutoHotkeys: TMenuAutoFlag|Автоматические горячие клавиши
  property AutoLineReduction: TMenuAutoFlag
  property AutoMerge: Boolean|Автообъединение пунктов меню
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Images: TCustomImageList|Содержит компонент класса TCustomImageList, который содержит изображения
  property Items: TMenuItem|Элементы меню
  property Name: String|Имя элемента
  property OwnerDraw: Boolean|Определяет, содержит ли компонент собственную процедуру прорисовки элемента.
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  
TMemIniFile: TCustomIniFile|Класс для работы с текстовыми INI файлами (используется, в основном, для хранения значений настроек в файлах)
  function Create(const FileName: String): Constructor|Создание объекта (конструктор)
    FileName - путь и имя файла ini
  function ReadString(const Section, Ident, Default: String): String|Получение значения ключа по указанной секции и его идентификатору
    Section - имя секции
    Ident - идентификатор считываемого ключа
    Default - значение по-умолчанию, которое будет возвращено, в случае отсутствия строки по заданным параметрам
  procedure Clear|Очистка коллекции или набора подчинённых объектов
  procedure DeleteKey(const Section, Ident: String)|Удаление ключа
    Section - имя секции
    Ident - идентификатор удаляемого ключа
  procedure EraseSection(const Section: String)|Очистка всей секции
    Section - имя секции, которая будет очищена
  procedure GetStrings(List: TStrings)|Занесение пар ключ=значение в объект TStrings
    List - объект TStrings, в который будет занесена информация
  procedure LoadIniFileFromStream(oStream: TStream)|Загрузка данных из объекта TStream
    oStream - объект TStream, из которого будет загружена информация ini файла
  procedure ReadSection(const Section: String; Strings: TStrings)|Считывание ключей и значений всей секции в объект TStrings
    Section - имя секции
    Strings - объект TStrings, в который будет занесена информация
  procedure ReadSectionValues(const Section: String; Strings: TStrings)|Считывание только значений всей секции в объект TStrings
    Section - имя секции
    Strings - объект TStrings, в который будет занесена информация
  procedure ReadSectionValuesEx(const Section: String; Strings: TStrings)|Считывание только значений всей секции в объект TStrings
    Section - имя секции
    Strings - объект TStrings, в который будет занесена информация
  procedure ReadSections(Strings: TStrings)|Считывание имён секций в объект TStrings
    Strings - объект TStrings, в который будет занесена информация
  procedure SaveIniFileToStream(oStream: TStream)|Запись информации в объект TStream
    oStream - объект TStream, в который будет записана информация ini файла
  procedure SetStrings(List: TStrings)|Считывание информации из объекта TStrings
    List - объект TStrings, из которого будет занесена информация
  procedure WriteString(const Section, Ident, Value: String)|Установка ключа и его значения по указанной секции
    Section - имя секции
    Ident - идентификатор ключа
    Value - значение ключа

TMemo: TWinControl|Поле текстового редактирования
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Alignment: TAlignment|Выравнивание компонента
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TFormBorderStyle|Стиль границ окна
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property HideSelection:Boolean
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImeMode: TImeMode|Задаёт режим IME (input method editor), режим ввода теста.
  property ImeName: String|Задаёт имя режима ввода текста IME (input mode editor)
  property Left: Integer|Координата левого края компонента в пикселях
  property Lines: TStrings|Строки текста
  property Margins: TMargins|Отступ от края внутри элемента 
  property MaxLength: Integer|Максимальная длина текста
  property Name: String|Имя элемента
  property OEMConvert: Boolean|Определяет, что символы, вводимые в поле ввода преобразуются из ANSI в OEM, а затем обратно в ANSI.
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ReadOnly: Boolean|Режим "Только чтение" - запрещает изменять значения или состояние элемента
  property ScrollBars: TScrollStyle|
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property WantReturns: Boolean|Определяет допустимость ввода пользователем в текст символов перевода строки
  property WantTabs: Boolean|Определяет допустимость ввода пользователем в текст символов табуляции
  property Width: Integer|Ширина в пикселях
  property WordWrap: Boolean|Включение или отключение переноса слов, если весь текст не входит.

TMemoryStream: TStream|Класс TMemoryStream обеспечивает сохранение данных в адресном пространстве. При этом методы доступа к этим данным остаются теми же, что и при работе с файловыми потоками.
  procedure Clear|Очистка памяти
  procedure LoadFromFile(Filename: String)|Загрузить в память из файла
    Filename - путь и имя файла
  procedure LoadFromStream(Stream: TStream)|Загрузить в память из TStream
    Stream - объект типа TStream
  procedure SaveToFile(Filename: String)|Сохранить из памяти в файл
    Filename - путь и имя файла
  procedure SaveToStream(Stream: TStream)|Сохранить из памяти в TStream
    Stream - объект типа TStream
  
TMenu: TComponent|Меню формы или диалога
  index property Items(p0: Integer): TMenuItem|Доступ к элементам пунктов меню
    p0 - индекс элемента пункта меню (начиная с 0)
  property Items: TMenuItem|Элементы меню
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  
TMenuItem: TComponent|Элемент меню
  event OnClick|Событие при нажатии мышкой
  function GetParentMenu: TMenu|Получить родительское меню
  index property Items(p0: Integer): TMenuItem|Доступ к элементам подпунктов меню
    p0 - индекс элемента пункта меню (начиная с 0)
  procedure Add(Item: TMenuItem)|Добавление элемента подпункта меню
    Item - добавляемый элемент подпункта меню
  procedure Clear|Очистка коллекции подпунктов меню
  procedure Delete(Index: Integer)|Удаление подпункта меню по индексу
    Index - индекс элемента пункта меню (начиная с 0)
  procedure Insert(Index: Integer; Item: TMenuItem)|Вставка подпункта меню по индексу
    Index - индекс элемента пункта меню (начиная с 0)
    Item - добавляемый элемент подпункта меню
  procedure Remove(Item: TMenuItem)|Удаление подпункта меню
    Item - удаляемый элемент подпункта меню
  property Action: TBasicAction|Определяет действие, связанное с элементом управления.
  property AutoCheck: Boolean|Указывает, переключается ли состояние Checked автоматически, когда происходит нажатие на пункт меню.
  property AutoHotkeys: TMenuItemAutoFlag|Определяет, устанавливаются ли горячие клавиши для подпунктов автоматически.
  property AutoLineReduction: TMenuItemAutoFlag|Определяет автоматическое удаление избыточных разделителей из подменю
  property Bitmap: TBitmap|Картинка элемента меню
  property Break: TMenuBreak|Разделитель меню
  property Caption: String|Надпись
  property Checked: Boolean|Состояния установленной галочки (ключено/выключено)
  property Count: Integer|Количество элементов меню
  property Default: Boolean|Определяет, является ли кнопка по-умолчанию (при нажатии Enter)
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property GroupIndex: Integer|Индекс группы
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImageIndex: Integer|Номер картинки
  property Name: String|Имя элемента
  property RadioItem: Boolean|Определяет вид пункта меню как радио-кнопку
  property ShortCut: Variant|Определяет комбинацию горячих клавиш для быстрого доступа к пункту меню
  property SubMenuImages: TCustomImageList|Список изображений, которые появляются рядом с отдельными элементами в подменю этого пункта меню.
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Visible: Boolean|Определяет, видим или невидим компонент
  
TMetafile: TGraphic|TMetafile содержит метафайл графики (формат файла EMF). Свойства TMetafile указывают размер и характеристики метафайла.

TMetafileCanvas: TCanvas|TMetafileCanvas позволяет приложениям создавать метафайлы изображения с нуля.
  function Create(AMetafile: TMetafile; ReferenceDevice: Integer): Constructor|Создание объекта (конструктор)
    AMetafile - метафайл
    ReferenceDevice - HDC (handle device context)
  property Brush: TBrush|Кисть. Определяет цвет и тип заполнения для заполнения замкнутых фигур . Далее - см свойства класса TBrush.
  property CopyMode: Integer|Свойство CopyMode определяет то, как копировать образ с другого холста на собственную поверхность рисования.
  property Font: TFont|Используемый шрифт
  property Pen: TPen|Определяет свойства пера, используемые при рисовании линий.
  
TMitchellKernel: TCustomKernel|Ядро фильтра преобразований изображений

TMonthCalColors: TPersistent|Цвета календаря
  property BackColor: TColor32|Цвет фона
  property MonthBackColor: TColor32|Цвет фона месяца
  property TextColor: TColor32|Цвет текста
  property TitleBackColor: TColor32|Цвет фона заголовка
  property TitleTextColor: TColor32|Цвет текста заголовка
  property TrailingTextColor: TColor32|Цвет текста пояснений
  
TMonthCalendar: TWinControl|Календарь
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoSize: Boolean|Автоматически подгонять размер под размер контейнера, в котором находится элемент
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TFormBorderStyle|Стиль границ окна
  property CalColors: TMonthCalColors|Цвета календаря
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Date: TDateTime|Текущая дата календаря
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property EndDate: TDateTime|Конечная дата диапазона
  property FirstDayOfWeek: TCalDayOfWeek|Первый день недели
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImeMode: TImeMode|Задаёт режим IME (input method editor), режим ввода теста.
  property ImeName: String|Задаёт имя режима ввода текста IME (input mode editor)
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MaxDate: TDateTime|Максимальная дата
  property MaxSelectRange: Integer|Максимальный диапазон для выбора
  property MinDate: TDateTime|Минимальная дата
  property MultiSelect: Boolean|Определяет возможность множественного выделения
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property ShowToday: Boolean|Указывает, будет ли показана сегодняшняя дата под календарем.
  property ShowTodayCircle: Boolean|Указывает, будет ли обведена сегодняшняя дата в календаре.
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TNearestResampler: TCustomResampler|Этот класс реализует быстрый метод ресамплинга на основе алгоритма интерполяции ближайших значений
  property PixelAccessMode: TPixelAccessMode|Режим доступа к пикселям
  
TNestedBrush: TSolidBrush|Объединённые кисти
  property Brushes: TBrushCollection|Коллекция объединённых кистей
  
TObject: |Общий класс всех объектов
  function ClassName: String|Имя класса
  function Create: Constructor|Создание объекта (конструктор)
  procedure Free|Освобождение объекта из памяти. Если объект был создан через метод Create или оператор New, то после использования объекта необходимо объект удалять данным методом.
  
TOpenDialog: TCommonDialog|Диалог открытия файла
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property DefaultExt: String|Расширение файлов по-умолчанию
  property FileName: String|Имя файла
  property Filter: String|Фильтр файлов по расширению.\nНапример:\nText files (*.txt)|*.txt|Pascal files (*.pas)|*.pas
  property FilterIndex: String|Номер фильтра по-умолчанию
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property InitialDir: String|Начальная директория
  property Name: String|Имя элемента
  property Options: TOpenOptions|Настройка диалогового окна открытия файла
  property OptionsEx: TOpenOptionsEx|Дополнительные настройки диалогового окна открытия файла
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Title: String|Заголовок диалога
  
TPageControl: TWinControl|Элемент интерфейса с отображением вкладок (страниц)
  index property Pages(p0: Integer): TTabSheet|Доступ к страницам (вкладкам)
    p0 - индекс страницы (начиная с 0)
  procedure SelectNextPage(GoForward: Boolean)|Сделать активной следующую страницу
    GoForward - флаг направления перехода на следующую страницу
  property ActivePage: TTabSheet|Активная страница
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DockSite: Boolean|Определяет, привязан ли объект к контейнеру, в который встроен данный компонент
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property HotTrack: Boolean|Заголовок вкладки (закладки) может слегка подсвечиваться, если над ним будет указатель мыши.
  property Images: TCustomImageList|Содержит компонент класса TCustomImageList, который содержит изображения
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MultiLine: Boolean|При значении True закладки страниц могут располагаться в несколько рядов (если они не помещаются в один). При значении False в верхнем правом углу появляются кнопки, организующие прокрутку невидимых заголовков.
  property Name: String|Имя элемента
  property OwnerDraw: Boolean|Определяет, содержит ли компонент собственную процедуру прорисовки элемента.
  property PageCount: Integer|Количество страниц в элементе управления
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка  
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property RaggedRight: Boolean|При значении True ширина закладок изменяется таким образом, чтобы они не занимали всю сторону области
  property ScrollOpposite: Boolean|При значении True, если закладки расположены в несколько рядов, при переходе к закладке следующего ряда все остальные ряды перемещаются на противоположную сторону блокнота. Действительно только при MultiLine=True
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Style: TTabStyle|Определяет стиль закладок компонента: tsTabs — стандартные закладки, tsButtons — объемные кнопки, tsFlatButtons — плоские кнопки.
  property TabHeight: Integer|Задает ширину закладок. При значении 0 ширина определяется автоматически так, чтобы вмеСтиль текст.
  property TabIndex: Integer|Задает номер текущей страницы, начиная с нуля.
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabPosition: TTabPosition|Определяет расположение закладок на компоненте. Расположение, отличное от tpTop, возможно только для стиля tsTabs.
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
    
TPaintBox: TGraphicControl|Прямоугольник с возможностью рисования в нём
  event OnPaint|Событие, возникающее при отрисовке компонента.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property Canvas: TCanvas|Обеспечивает пространство (холст, канву) для создания, хранения и модификации графических объектов.
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TPanel: TCustomControl|Элемент управления Панель. Может содержать в себе другие элементы управления.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Alignment: TAlignment|Выравнивание компонента
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoSize: Boolean|Автоматически подгонять размер под размер контейнера, в котором находится элемент
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BevelWidth: Integer|Ширина скоса
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TBorderStyle|Определяет:\n* вид заголовка формы\n* доступные кнопки в заголовке формы\n* отображение строки меню поведение границ формы
  property BorderWidth: Integer|Ширина линии границы
  property Caption: String|Надпись
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DockSite: Boolean|Определяет, привязан ли объект к контейнеру, в который встроен данный компонент
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.     
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property FullRepaint: Boolean|Определяет, перерисовывает ли себя панель полностью, когда изменяется её размер.
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Locked: Boolean|Определяет для панели, которая используется в качестве панели в Toolbar, заменяется ли она панелью, поставляемой сервером OLE.
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Padding: TPadding|Отступ элемента от края содержащего его контейнера
  property ParentBackground: Boolean|Определяет, используется ли фон компоненты родителя|Определяет, используется ли фон компоненты родителя
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property UseDockManager: Boolean|Определяет, используется ли DockManager при drag-and-dock операциях.
  property VerticalAlignment: TVerticalAlignment|Определяет стиль вертикального выравнивания
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
   
TPathTransformation: TTransformation|Преобразование графического изображения
  property BottomCurve: Variant|Нижняя кривая
  property TopCurve: Variant|Верхняя кривая
  
TPen: TPersistent|Перо (используется для рисования)
  function Create: Constructor|Создание объекта (конструктор)
  property Color: TColor32|Цвет элемента
  property Mode: TPenMode|Режим пера (pmBlack, pmCopy, pmMask...)
  property Style: TPenStyle|Стиль пера (psClear, psDash, psDashDot...)
  property Width: Integer|Ширина в пикселях
  
TPersistent: TObject|Базовый класс связанного элемента
  procedure Assign(Source: TPersistent)|Этот метод осуществляет копирование содержимого одного объекта (Source) в другой объект TBitmap (Self, т. е. в объект, вызвавший метод Assign). При этом объект-получатель остается самим собой, чего нельзя достигнуть, используя простое присваивание переменных объектного типа.
    Source - объект, содержимое которого будет скопировано

TPicture: TPersistent|Картинка
  procedure LoadFromFile(const Filename: string)|Загрузить из файла
    Filename - путь и имя файла
  procedure SaveToFile(const Filename: string)|Сохранить в файл
    Filename - путь и имя файла
  property Height: Integer|Высота в пикселях 
  property Width: Integer|Ширина в пикселях
  
TPolarTransformation: TTransformation|Преобразование графического изображения
  property DstRect: TFloatRect|Прямоугольник преобразования
  property Phase: TFloat|Значение величины преобразования
  
TPopupMenu: TMenu|Всплывающее меню (при нажатии правой клавиши мышки)
  event OnPopup|Событие, возникающее при появлении меню
  procedure Popup(X, Y: Extended)|Показ меню по заданным координатам
    X - координата X верхнего левого угла меню
    Y - координата Y верхнего левого угла меню
  property Alignment: TPopupAlignment|Режим выравнивания текста
  property AutoHotkeys: TMenuAutoFlag|Автоматические горячие клавиши
  property AutoLineReduction: TMenuAutoFlag|Определяет, удалять ли избыточные разделительные линии
  property AutoPopup: Boolean|Определяет, отображается ли всплывающее меню автоматически, когда пользователь нажимает правую кнопку мыши.
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property Images: TCustomImageList|Содержит компонент класса TCustomImageList, который содержит изображения
  property Items: TMenuItem|Элементы пунктов меню
  property MenuAnimation: TMenuAnimation|Анимация меню
  property Name: String|Имя элемента
  property OwnerDraw: Boolean|Определяет, содержит ли компонент собственную процедуру прорисовки элемента.
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property PopupComponent: TComponent|Компонент меню
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property TrackButton: TTrackButton

TPrintDialog: TCommonDialog|Диалог печати на принтер
  property Collate: Boolean|Устанавливается ли предварительно опция Collate
  property Copies: Integer|Сколько копий печатать
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property FromPage: Integer|Начальная страница в диапазоне страниц
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property MaxPage: Integer|Максимальная страница
  property MinPage: Integer|Минимальная страница
  property Name: String|Имя элемента
  property Options: TPrintDialogOptions|Настройки печати
  property PrintRange: TPrintRange|Режим диапазона печати
  property PrintToFile: Boolean|Печатать в файл
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property ToPage: Integer|Конечная страница в диапазоне страниц
  
TPrinterSetupDialog: TCommonDialog|Диалог настройки печати на принтер
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  
TProgressBar: TWinControl|Прогресс-бар (индикатор прогресса выполнения)
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BorderWidth: Integer|Ширина линии границы
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Max: Integer|Максимальное значение
  property Min: Integer|Минимальное значение
  property Name: String|Имя элемента
  property Orientation: TProgressBarOrientation
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property Position: Integer|Текущая позиция прогресса выполнения (значение от Min до Max)
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Smooth: Boolean|Плавное отображение прогресса (не по шагам)
  property Step: Integer|Значение шага, если свойство Smooth выключено
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TProjectiveTransformation: TTransformation|Преобразование графического изображения (проекция)
  property X0: TFloat|Новая координата X левого верхнего угла прямоугольника
  property X1: TFloat|Новая координата X правого верхнего угла прямоугольника
  property X2: TFloat|Новая координата X правого нижнего угла прямоугольника
  property X3: TFloat|Новая координата X левого нижнего угла прямоугольника
  property Y0: TFloat|Новая координата Y левого верхнего угла прямоугольника
  property Y1: TFloat|Новая координата Y правого верхнего угла прямоугольника
  property Y2: TFloat|Новая координата Y правого нижнего угла прямоугольника
  property Y3: TFloat|Новая координата Y левого нижнего угла прямоугольника
  
TRadioButton: TWinControl|Радио-кнопка (круглая кнопка из списка выбора)
  property Action: TBasicAction|Определяет действие, связанное с элементом управления.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Alignment: TLeftRight|Выравнивание влево или вправо
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Caption: String|Надпись
  property Checked: Boolean|Состояния установленной галочки (ключено/выключено)
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Default: Boolean|Определяет, является ли кнопка по-умолчанию (при нажатии Enter)
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property ModalResult: Integer|При закрытии модальной формы функция возвращает значение свойства ModalResult
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  property WordWrap: Boolean|Включение или отключение переноса слов, если весь текст не входит.

TRect: TObject|Прямоугольник (координаты и размер)
  function Create(aLeft, aTop, aRight, aBottom: Integer): Constructor|Создание объекта (конструктор)
    aLeft - Координата левого края в пикселях
    aTop - Координата верхнего края в пикселях
    aRight - Координата правого края в пикселях
    aBottom - Координата нижнего края в пикселях
  procedure Inflate(DX, DY: Integer)|Увеличение размера прямоугольника
    DX - значение по горизонтали, на которое будет увеличен размер прямоугольника
    DY - значение по вертикали, на которое будет увеличен размер прямоугольника
  procedure InflateEx(const DL, DT, DR, DB: Integer)|Увеличение размера прямоугольника расширенное
    DL - значение, на которое будет изменено свойство Left (левого края)
    DT - значение, на которое будет изменено свойство Top (верхнего края)
    DR - значение, на которое будет изменено свойство Right (правого края)
    DB - значение, на которое будет изменено свойство Bottom (нижнего края)
  procedure Intersect(const R: TRect)|Найти и установить значения пересекающиеся с другим прямоугольником (общая прямоугольная площадь)
    R - прямоугольник, с которым будет найдено общее пересечение
  procedure Offset(const DX, DY: Integer)|Сдвиг координат на заданную величину
    DX - значение сдвига по горизонтали (координата X)
    DY - значение сдвига по вертикали (координата Y)
  procedure SetLocation(X, Y: Integer)|Установка координат прямоугольника
    X - значение координаты X (по горизонтали)
    Y - значение координаты Y (по вертикали)
  procedure Union(const R: TRect)|Объединение с другим прямоугольником
    R - прямоугольник, с которым будет объединение
  property Bottom: Integer|Координата нижнего края компонента в пикселях
  property Height: Integer|Высота в пикселях 
  property Left: Integer|Координата левого края компонента в пикселях
  property Right: Integer|Координата правого края компонента в пикселях
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Width: Integer|Ширина в пикселях
  
TRegExpr: TObject|Класс для работы с регулярными выражениями
  function Create(const aRegEx: string; aOptions: Integer = 0): Constructor|Создание объекта для работы с регулярными выражениями (конструктор)
    aRegEx - регулярное выражение.\n\nПримеры регулярных выражений:\n"<article>(.*?)</article>" - поиск с указанием группировки между тегами <article> и </article>;\n'(<div[^>]+class="logo".*?</div>)' - поиск блока текста с группировкой, включая тег <div> классом "logo" и заканчивающимся тегом </div>.
    aOptions - опции работы с регулярными выражениями. Могут использоваться константы, начинающиеся на PCRE_, например: PCRE_SINGLELINE, PCRE_CASELESS и другие.
  function Match(aIndex: Integer = 1): String|Возвращает значение найденного соответствия по номеру группировки. 0 - всё найденное соответствие без учёта группировок. 1...n - значение указанного номера группировки (то что в регулярном выражении заключено в круглые скобки). Если не указан индекс - возвращает по-умолчанию значение первой группировки. Например, если регулярное выражение будет '<a[^>]+href="(.*?)">(.*?)</a>':\nMatch(1) - вернёт значение ссылки href;\nMatch(2) - вернёт значение текста <b>между</b> тегами <a...> и </a>;\nMatch(0) - вернёт всё совпадение начиная с <a..., кончая </a> включительно.
    aIndex - номер группировки (то что в регулярном выражении заключено в круглые скобки), начиная с 1. 0 - всё соответствие, без учёта группировок.
  function Replace(const aReplacement: String): String|Возвращает результат, который получается после замены найденного соответствия на указанную строку
    aReplacement - строка замены
  function Search(const aSubject: string; aOptions: Integer = 0): Boolean|Поиск соответствий в заданном тексте (строке). Возвращает True, если соответствие найдено. Продолжить поиск с последнего найденного соответствия можно методом SearchAgain.
    aSubject - строка (текст), в котором будет производиться поиск соответствия регулярному выражению
    aOptions - опции работы с регулярными выражениями. Могут использоваться константы, начинающиеся на PCRE_, например: PCRE_SINGLELINE, PCRE_CASELESS и другие.
  function SearchAgain(aOptions: Integer = 0): Boolean|Продолжить поиск после последнего места найденного соответствия (например, после метода Search или данного метода SearchAgain). Возвращает True, если соответствие найдено.
    aOptions - опции работы с регулярными выражениями. Могут использоваться константы, начинающиеся на PCRE_, например: PCRE_SINGLELINE, PCRE_CASELESS и другие.
  property Subject: String|Текст (строка) с которым работает данный класс (поиск и/или замена происходит именно в этом тексте). Только для чтения, нельзя непосредственно устанавливать через это свойство.
  
TRichEdit: TCustomRichEdit|Многострочный редактор, работающий с расширенным текстовым форматом RTF. Текст формата RTF хранит дополнительную служебную информацию, управляющую свойствами каждого абзаца и сменой шрифта по ходу текста.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Alignment: TLeftRight|Выравнивание влево или вправо
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BevelWidth: Integer|Ширина скоса
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TBorderStyle|Определяет:\n* вид заголовка формы\n* доступные кнопки в заголовке формы\n* отображение строки меню поведение границ формы
  property BorderWidth: Integer|Ширина линии границы
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property HideScrollBars: Boolean
  property HideSelection: Boolean|Скрывать выделение, если элемент находится не в фокусе
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImeMode: TImeMode|Задаёт режим IME (input method editor), режим ввода теста.
  property ImeName: String|Задаёт имя режима ввода текста IME (input mode editor)
  property Left: Integer|Координата левого края компонента в пикселях
  property Lines: TStrings|Строки текста
  property Margins: TMargins|Отступ от края внутри элемента 
  property MaxLength: Integer|Максимальная длинна текста
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PlainText: Boolean|Определяет использование чистого текста без форматирования
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property WantReturns: Boolean|Определяет допустимость ввода пользователем в текст символов перевода строки
  property WantTabs: Boolean|Определяет допустимость ввода пользователем в текст символов табуляции
  property Width: Integer|Ширина в пикселях
  property WordWrap: Boolean|Включение или отключение переноса слов, если весь текст не входит.

TSaveDialog: TCommonDialog|Диалоговое окно сохранения файла
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property DefaultExt: String|Расширение файлов по-умолчанию
  property FileName: String|Имя файла
  property Filter: String|Фильтр файлов по расширению. \nНапример:\nText files (*.txt)|*.txt|Pascal files (*.pas)|*.pas
  property FilterIndex: Integer|Номер фильтра в списке свойства Filter
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property InitialDir: String|Начальная директория
  property Name: String|Имя компонента
  property Options: TOpenOptions|Опции диалогового окна открытия или сохранения файла
  property OptionsEx: TOpenOptionsEx|Дополнительные опции диалогового окна открытия или сохранения файла
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Title: String|Заголовок окна
  
TScrollBox: TScrollingWinControl|Элемент прокрутки
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoScroll: Boolean|Автоматическое появление элементов прокрутки
  property AutoSize: Boolean|Автоматически подгонять размер под размер контейнера, в котором находится элемент
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BevelWidth: Integer|Ширина скоса
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TBorderStyle|Определяет:\n* вид заголовка формы\n* доступные кнопки в заголовке формы\n* отображение строки меню поведение границ формы
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DockSite: Boolean|Определяет, привязан ли объект к контейнеру, в который встроен данный компонент
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property HorzScrollBar: TControlScrollBar|Элемент управления - горизонтальная прокрутка
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Padding: TPadding|Отступ элемента от края содержащего его контейнера
  property ParentBackground: Boolean|Определяет, используется ли фон компоненты родителя
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property VertScrollBar: TControlScrollBar|Вертикальная полоса прокрутки
  property Visible: Boolean|Определяет, видим или невидим компонент
  property WantReturns: Boolean|Определяет допустимость ввода пользователем в текст символов перевода строки
  property WantTabs: Boolean|Определяет допустимость ввода пользователем в текст символов табуляции
  property Width: Integer|Ширина в пикселях

TScrollingWinControl: TWinControl|Базовый класс элементов прокрутки
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  roperty HorzScrollBar: TControlScrollBar|Элемент управления - горизонтальная прокрутка
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property VertScrollBar: TControlScrollBar|Вертикальная полоса прокрутки
  property Width: Integer|Ширина в пикселях
  
TShape: TGraphicControl|Компонент предназначен для отображения одной из простейших геометрических фигур: прямоугольника, квадрата, скругленного прямоугольника, скругленного квадрата, эллипса, окружности. Любая из перечисленных геометрических фигур выводится в прямоугольник, задаваемый свойствами Left, Top (координаты левого верхнего угла прямоугольника) и Width, Height (размеры прямоугольника).
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property Brush: TBrush|Кисть. Определяет цвет и тип заполнения для заполнения замкнутых фигур . Далее - см свойства класса TBrush.
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property Pen: TPen|Определяет свойства пера, используемые при рисовании линий.
  property Shape: TShapeType|Тип геометрической фигуры
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property VertScrollBar: TControlScrollBar|Вертикальная полоса прокрутки
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TSinshKernel: TCustomKernel|Sinsh-ядро фильтров преобразований изображений
  property Coeff: Extended|Коэффициент
  property Width: Integer|Ширина в пикселях
  
TSize: TObject|Объект, хранящий 
  property Height: Integer|Высота в пикселях 
  property Width: Integer|Ширина в пикселях
  property cx: Integer|Ширина прямоугольника в пикселях
  property cy: Integer|Высота прямоугольника в пикселях
  
TSolidBrush: TObject|Определяет кисть одного цвета. Кисти используются для заливки графических фигур, таких как прямоугольники, эллипсы, круги, многоугольники и контуры.
  function Create(ABrushCollection: TBrushCollection): Constructor|Создание объекта (конструктор)
    ABrushCollection - коллекция кистей
  property FillColor: TColor32|Цвет кисти
  property FillMode: TPolyFillMode|Метод заливки
  property Visible: Boolean|Определяет, видим или невидим компонент
  
TSpeedButton: TGraphicControl|Кнопка, которая используется для выполнения команды или в наборе режимов.
  property Action: TBasicAction|Определяет действие, связанное с элементом управления.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property AllowAllUp: Boolean|Указывает, могут ли все кнопки в группе, которая содержит эту кнопку, быть не выделенными.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Caption: String|Надпись
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Down: Boolean|Определяет, выбрана ли кнопка (нажата) или не выбрана (отжата).
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Flat: Boolean|Плоский стиль элемента
  property Font: TFont|Используемый шрифт
  property Glyph: TBitmap|Свойство Glyph типа TBitmap определяет растровый рисунок кнопки. По умолчанию свойство Glyph имеет значение None, т. е. кнопка не содержит рисунок. Рисунок может содержать до трех отдельных изображений (глифов).
  property GroupIndex: Integer|Индекс группы
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Layout: TButtonLayout|Определяет к какому краю кнопки будет прижиматься пиктограмма
  property Left: Integer|Координата левого края компонента в пикселях
  property Margin: Integer|Определяет расстояние в пикселах от края компонента
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property NumGlyphs: Integer|Определяет сколько растровых изображений размещается в файле, содержащем пиктограмму
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Spacing: Integer|Определяет расстояние в пикселах от рисунка до текста
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Transparent: Boolean|Определяет прозрачность кнопки
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TSplineKernel: TCustomKernel|Ядро фильтра преобразований изображений

TSplitter: TGraphicControl|Перемещаемый разделитель областей
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property AutoSnap: Boolean|Определяет, изменение размера соседних объектов до нуля, когда их размер меньше чем MinSize.
  property Beveled: Boolean|Определяет, выглядит ли разделитель скошенным по краю, когда движется.
  property Color: TColor32|Цвет разделителя
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MinSize: Integer|Задает минимальный размер в пикселях панелей по обе стороны от разделителя
  property Name: String|Имя элемента
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ResizeStyle: TResizeStyle|Определяет эффект перемещения разделителя
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях

TStatusBar: TWinControl|Статус-бар (строка состояния)
  property Action: TBasicAction|Определяет действие, связанное с элементом управления.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoHint: Boolean|Автоматическое всплывание подсказок
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderWidth: Integer|Ширина линии границы
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property Panels: TStatusPanels|Панели
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property SimplePanel: Boolean|Определяет, отображается ли в строке состояния одна или несколько панелей
  property SimpleText: Boolean|Содержит строку, которая отображается в строке состояния, когда SimplePanel установлена в True
  property SizeGrip: Boolean|Определяет, можно ли изменять размер строки состояния во время выполнения
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property UseSystemFont: Boolean|Указывает, используется ли в строке состояния системный шрифт
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  
TStatusPanel: TPersistent|Панель строки состояния
  property Alignment: TAlignment|Выравнивание компонента
  property Bevel: TStatusPanelBevel|Определяет, скошены ли края по краю
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property Style: TStatusPanelStyle|Стиль панели строки состояния
  property Text: String|Текст панели строки состояния
  property Width: Integer|Ширина в пикселях

TStatusPanels: TPersistent|Список панелей строки состояния
  function Add: TStatusPanel|Добавление новой панели строки состояния
  index property Items(p0: Integer): TStatusPanel|Доступ к элементам списка по индексу
    p0 - индекс элемента (начиная с 0)
  
TStream: TObject|Класс для работы с потоками (Streams). Является абстрактной моделью совокупности данных, обладающей двумя свойствами — длиной Size и положением текущего элемента Position.
  function CopyFrom(Source: TStream; Count: Longint): Longint|Копирование блока данных из чужого потока, начиная с текущей позиции в потоке Source, при этом начнет писать данные, начиная с текущей позиции в нашем потоке. Для копирования будет выделен внутренний буфер размером в 60 кб, позволяющий сравнительно большими блоками копировать данные, при этом не занимая надолго сам источник данных (источник может оказаться неспособным к  работе с несколькими процессами). И еще если в качестве Count указать 0, то функция поймет что нужно скопировать весь поток от начала (Внимание! Не от текущей позиции) до конца. Весьма удобная функция, при перекачке данных из медленного источника в быстрый или из ReadOnly потока в поток доступный для записи.
  function Read(var Buffer: string; Count: Longint): Longint|Чтение данных из текущей позиции. Первый параметр это сам буфер данных (внимание не указатель, а сама переменная буфера!). Второй размер буфера в байтах. Результат число переданных данных.
  function Seek(Offset: Longint; Origin: Word): Longint|Устанавливает позицию чтения/записи в потоке
  function Write(Buffer: string; Count: Longint): Longint|Запись данных начиная с текущей позиции. Первый параметр это сам буфер данных (внимание не указатель, а сама переменная буфера!). Второй размер буфера в байтах. Результат число переданных данных.
  property Position: Longint|Текущая позиция в потоке
  property Size: Longint|Размер потока

TStringList: TStrings|Список переменной длины, состоящий из строк
  function Find(s: String; var Index: Integer): Boolean|Получает в переменную Index, указанной вторым параметром, индекс позиции строки в списке соответствующей данной строке. Если строка найдена, то возвращается True.
  procedure Sort|Сортирока строк
  property Duplicates: TDuplicates|Это свойство может иметь одно из следующих значений:\n* dupIgnore - игнорирует (отбрасывает) дубликаты;\n* dupAccept - позволяет дубликаты;\n* dupError - выбрасывает исключение, если дубликаты имеются.
  property Sorted: Boolean|Определяет, отсортированы ли строки в списке
  
TStrings: TPersistent|Многофункциональный класс, предназначенный для хранения текстовых строк и связанных с ними объектов (любых потомков TObject).
  function Add(const S: string): Integer|Добавляет заданную параметром S строку в конец списка, а в качестве результата возвращает положение нового элемента в списке.
    S - добавляемая строка
  function AddObject(const S: string; AObject: TObject): Integer|Добавляет в конец списка строку S и связанную с ней ссылку на объект, указываемую параметром AObject.
    S - строка, связанная с объектом
    AObject - добавляемый объект
  function Create: Constructor|Создание объекта (конструктор)
  function IndexOf(const S: string): Integer|В случае успешного поиска функция возвращает номер позиции найденной строки в списке; если строковый элемент не найден, то возвращается значение −1.
    S - искомая строка
  function IndexOfName(const Name: string): Integer|Возвращает номер позиции имени в строках пар Имя=Значение; если строковый элемент не найден, то возвращается значение −1.
    Name - искомое имя 
  function IndexOfObject(AObject: TObject): Integer|Возвращает номер позиции найденного объекта в списке; если объект не найден, то возвращается значение −1.
    AObject - искомый объект
  index property Names(p0: Integer): string|Доступ к именам в строках пар Имя=Значение по индексу
    p0 - индекс строки пары Имя=Значение (начиная с 0)
  index property Objects(p0: Integer): TObject|Доступ к объектам по индексу
    p0 - индекс объекта (начиная с 0)
  index property Strings(p0: Integer): string|Доступ к строкам по индексу
    p0 - индекс строки (начиная с 0)
  index property Values(p0: String): string|Доступ к значению по имени в строках пар Имя=Значение
    p0 - Имя, для пар Имя=Значение
  procedure Clear|Очистка коллекции строк и объектов
  procedure Delete(Index: Integer)|Удаление строки по указанному индексу
    Index - индекс строки (начиная с 0)
  procedure Insert(Index: Integer; const S: string)|Вставляет строку S в позицию с номером, определяемым параметром Index. При этом элементы списка, находившиеся до операции вставки в указанной позиции и ниже, смещаются вниз.
    Index - индекс строки (начиная с 0)
    S - вставляемая строка
  procedure InsertObject(Index: Integer; const S: string; AObject: TObject)|Вставляет строку S и связанную с ней ссылку на объект в позицию с номером, определяемым параметром Index. При этом элементы списка, находившиеся до операции вставки в указанной позиции и ниже, смещаются вниз.
    Index - индекс строки (начиная с 0)
    S - вставляемая строка, связанная с объектом
    AObject - вставляемый объект
  procedure LoadFromFile(const Filename: string)|Загрузить данные списка из файла
    Filename - путь и имя файла, из которого будут загружены данные
  procedure LoadFromStream(Stream: TStream)|Загрузить данные списка из потока (объекта TStream)
    Stream - объект потока TStream, из которого будут загружены данные
  procedure Move(CurIndex, NewIndex: Integer)|Перемещает элемент из позиции с номером CurIndex в новую позицию с номером NewIndex. Если указанный номер выходит за пределы списка, то возникает исключение.
    CurIndex - номер перемещаемой позиции
    NewIndex - номер новой позиции
  procedure SaveToFile(const Filename: string)|Сохранить данные списка в файл (объекты не сохраняются)
    Filename - путь и имя файла, в который будут сохранены данные
  procedure SaveToStream(Stream: TStream)|Сохранить данные объект потока (объекты не сохраняются)
    Stream - объект потока TStream, в который будут сохранены данные
  property CommaText: String|Представление данных в виде текстового формата, где значения разделены запятыми
  property Count: Integer|Количество строк
  property Text: String|Представление данных в виде текста
   
TStrokeBrush: TSolidBrush|Определяет цвет и узор, используемый для рисования линий и форм контуров графических примитивов.
  property EndStyle: TPolyEndStyle
  property JoinStyle: TPolyEndStyle
  property MiterLimit: TFloat
  property StrokeWidth: TFloat|Толщина линии контура
  
TTabControl: TWinControl|Элемент управления, представляющий собой набор вкладок
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DockSite: Boolean|Определяет, привязан ли объект к контейнеру, в который встроен данный компонент
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property HotTrack: Boolean|Заголовок вкладки (закладки) может слегка подсвечиваться, если над ним будет указатель мыши.
  property Images: TCustomImageList|Содержит компонент класса TCustomImageList, который содержит изображения
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MultiLine: Boolean|При значении True закладки страниц могут располагаться в несколько рядов (если они не помещаются в один). При значении False в верхнем правом углу появляются кнопки, организующие прокрутку невидимых заголовков.
  property MultiSelect: Boolean|Определяет возможность множественного выделения
  property Name: String|Имя элемента
  property OwnerDraw: Boolean|Определяет, содержит ли компонент собственную процедуру прорисовки элемента.
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property RaggedRight: Boolean|При значении True ширина закладок изменяется таким образом, чтобы они не занимали всю сторону области
  property ScrollOpposite: Boolean|При значении True, если закладки расположены в несколько рядов, при переходе к закладке следующего ряда все остальные ряды перемещаются на противоположную сторону блокнота. Действительно только при MultiLine=True 
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Style: TTabStyle|Определяет стиль закладок компонента: tsTabs — стандартные закладки, tsButtons — объемные кнопки, tsFlatButtons — плоские кнопки.
  property TabHeight: Integer|Задает ширину закладок. При значении 0 ширина определяется автоматически так, чтобы вместить текст.
  property TabIndex: Integer|Задает номер текущей страницы, начиная с нуля.
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabPosition: Integer|Позиция текущей вкладки
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property TabWidth: Integer|Ширина табуляции
  property Tabs: TStrings|Вкладки
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  
TTabSheet: TWinControl|Индивидуальная страница элемента управления набора вкладок TTabControl
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property BorderWidth: Integer|Ширина линии границы
  property Caption: String|Заголовок страницы
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Highlighted: Boolean
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImageIndex: Integer|Номер картинки
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента
  property PageControl: TPageControl|Родительский элемент управления набора вкладок TTabControl, который содержит данную страницу
  property PageIndex: Integer|Индекс страницы
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabVisible: Boolean
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
   
TText32: TObject|Класс текстового объекта
  function CountCharsThatFit(X, Y: TFloat; const text: String; ttFont: TTrueTypeFont; const BoundsRect: TFloatRect; forceWordBreak: Boolean = True): Integer|Подсчёт количества символов, которые входят в заданный прямоугольник с заданным шрифтом
    X - координата X текста
    Y - координата Y текста
    text - текст, количество символов которого будет измеряно
    ttFont - используемый шрифт
    BoundsRect - прямоугольник, в котором будет вестись подсчёт символов
    forceWordBreak - флаг, устанавливающий принудительный режим переноса строк. Необязательный параметр.
  function Create: Constructor|Создание объекта (конструктор)
  function Get(X, Y: TFloat; const text: String; ttFont: TTrueTypeFont; var NextInsertionPt: TFloatPoint): TArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста
    X - координата X текста
    Y - координата Y текста
    text - выводимый текст
    ttFont - используемый шрифт
    NextInsertionPt - точка следующей вставки
  function Get2(const boundsRect: TFloatRect; const text: String; ttFont: TTrueTypeFont; alignH: TAlignH; alignV: TAlignV; forceWordBreak: boolean = false): TArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста
    boundsRect - координаты текста
    text - выводимый текст
    ttFont - используемый шрифт
    alignH - способ выравнивания по горизонтали
    alignV - способ выравнивания по вертикали
    forceWordBreak - флаг, устанавливающий принудительный режим переноса строк. Необязательный параметр.
  function Get3(const path: TArrayOfTFixedPoint; const text: String; ttFont: TTrueTypeFont; alignH: TAlignH; alignV: TAlignV; rotateTextToPath: boolean; offsetFromLine: TFloat = 0): TArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста
    path - массив точек типа TFixedPoint, определяющий область, в которую должен вписаться текст
    text - выводимый текст
    ttFont - используемый шрифт
    alignH - способ выравнивания по горизонтали
    alignV - способ выравнивания по вертикали
    rotateTextToPath - флаг, указывающий разворачивать текст согласно очертанию path, переданному первым параметром
    offsetFromLine - значение дополнительного отступа от линии. Необязательный параметр.
  function GetBetweenPaths(const bottomCurve, topCurve: TArrayOfFixedPoint; const text: String; ttFont: TTrueTypeFont): TArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста между двумя заданными кривыми
    bottomCurve - массив точек типа TFixedPoint, определяющий ограничивающую нижнюю кривую
    topCurve - массив точек типа TFixedPoint, определяющий ограничивающую верхнюю кривую
    text - выводимый текст
    ttFont - используемый шрифт
  function GetBetweenPathsEx(const bottomCurve, topCurve: TArrayOfFixedPoint; const text: String; ttFont: TTrueTypeFont): TArrayOfArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста между двумя заданными кривыми
    bottomCurve - массив точек типа TFixedPoint, определяющий ограничивающую нижнюю кривую
    topCurve - массив точек типа TFixedPoint, определяющий ограничивающую верхнюю кривую
    text - выводимый текст
    ttFont - используемый шрифт
  function GetEx(X, Y: TFloat; const text: String; ttFont: TTrueTypeFont; var NextInsertionPt: TFloatPoint): TArrayOfArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста
    X - координата X текста
    Y - координата Y текста
    text - выводимый текст
    ttFont - используемый шрифт
    NextInsertionPt - точка следующей вставки
  function GetEx2(const boundsRect: TFloatRect; const text: String; ttFont: TTrueTypeFont; alignH: TAlignH; alignV: TAlignV; forceWordBreak: boolean = false): TArrayOfArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста
    boundsRect - координаты текста
    text - выводимый текст
    ttFont - используемый шрифт
    alignH - способ выравнивания по горизонтали
    alignV - способ выравнивания по вертикали
    forceWordBreak - флаг, устанавливающий принудительный режим переноса строк. Необязательный параметр.
  function GetEx3(const path: TArrayOfFixedPoint; const text: String; ttFont: TTrueTypeFont; alignH: TAlignH; alignV: TAlignV; rotateTextToPath: boolean; offsetFromLine: TFloat = 0): TArrayOfArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста
    path - массив точек типа TFixedPoint, определяющий область, в которую должен вписаться текст
    text - выводимый текст
    ttFont - используемый шрифт
    alignH - способ выравнивания по горизонтали
    alignV - способ выравнивания по вертикали
    rotateTextToPath - флаг, указывающий разворачивать текст согласно очертанию path, переданному первым параметром
    offsetFromLine - значение дополнительного отступа от границ. Необязательный параметр.
  function GetInflated(X, Y, delta: TFloat; const text: String; ttFont: TTrueTypeFont; var NextInsertionPt: TFloatPoint): TArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста с эффектом выделения
    X - координата X текста
    Y - координата Y текста
    delta - величина коэффициента выделения текста
    text - выводимый текст
    ttFont - используемый шрифт
    NextInsertionPt - точка следующей вставки
  function GetInflatedEx(X, Y, delta: TFloat; const text: String; ttFont: TTrueTypeFont; var NextInsertionPt: TFloatPoint): TArrayOfArrayOfArrayOfFixedPoint|Получение массива массивов точек TFixedPoint, отвечающих за очертание текста с эффектом выделения
    X - координата X текста
    Y - координата Y текста
    delta - величина коэффициента выделения текста
    text - выводимый текст
    ttFont - используемый шрифт
    NextInsertionPt - точка следующей вставки
  function GetTextFixedRect(X, Y: TFloat; const text: String; ttFont: TTrueTypeFont): TFixedRect|Возвращает прямоугольник, в который умещается текст с заданным шрифтом
    X - координата X текста
    Y - координата Y текста
    text - выводимый текст
    ttFont - используемый шрифт
  function GetTextHeight(const text: String; ttFont: TTrueTypeFont): TFloat|Возвращает высоту текста с заданным шрифтом
    text - выводимый текст
    ttFont - используемый шрифт
  function GetTextWidth(const text: String; ttFont: TTrueTypeFont): TFloat|Возвращает ширину текста с заданным шрифтом
    text - выводимый текст
    ttFont - используемый шрифт
  procedure ClearTransformations|Очистка параметров трансформации
  procedure Draw(bitmap: TBitmap32; X, Y: TFloat; const text: String; ttFont: TTrueTypeFont; color: TColor32)|Вывод текста на изображение Bitmap
    bitmap - изображение, куда будет выведен текст
    X - координата X текста
    Y - координата Y текста
    text - выводимый текст
    ttFont - используемый шрифт
    color - цвет текста
  procedure Draw2(bitmap: TBitmap32; const text: String; ttFont: TTrueTypeFont; color: TColor32)|Вывод текста на изображение Bitmap
    bitmap - изображение, куда будет выведен текст
    text - выводимый текст
    ttFont - используемый шрифт
    color - цвет текста
  procedure Draw3(bitmap: TBitmap32; const path: TArrayOfFixedPoint; const text: String; ttFont: TTrueTypeFont; color: TColor32; alignH: TAlignH = aCenter; alignV: TAlignV = aMiddle; offsetFromLine: TFloat = 0)|Вывод текста на изображение Bitmap
    bitmap - изображение, куда будет выведен текст
    path - массив точек типа TFixedPoint, определяющий область, в которую должен вписаться текст
    text - выводимый текст
    ttFont - используемый шрифт
    color - цвет текста
    alignH - способ выравнивания по горизонтали. Необязательный параметр. По-умолчанию по центру.
    alignV - способ выравнивания по вертикали. Необязательный параметр. По-умолчанию по центру.
    offsetFromLine - значение дополнительного отступа от границ. Необязательный параметр.
  procedure Draw4(bitmap: TBitmap32; const boundsRect: TFloatRect; const text: String; ttFont: TTrueTypeFont; color: TColor32; alignH: TAlignH; alignV: TAlignV; forceWordBreak: boolean = false)|Вывод текста на изображение Bitmap
    bitmap - изображение, куда будет выведен текст
    X - координата X текста
    Y - координата Y текста
    text - выводимый текст
    ttFont - используемый шрифт
    color - цвет текста
  procedure DrawAndOutline(bitmap: TBitmap32; X, Y: TFloat; const text: String; ttFont: TTrueTypeFont; outlinePenWidth: TFloat; outlineColor, fillColor: TColor32)|Вывод текста на изображение Bitmap с обводкой символов
  procedure Scale(sx, sy: TFloat)|Изменение масштаба текста
    sx - величина масштаба текста по горизонтали
    sy - величина масштаба текста по вертикали
  procedure Skew(sx, sy: TFloat)|Изменение наклона текста
    sx - величина наклона текста по горизонтали
    sy - величина наклона текста по вертикали
  procedure Translate(dx, dy: TFloat)|Изменение смещения(?) текста
    sx - величина смещения текста по горизонтали
    sy - величина смещения текста по вертикали
  property Angle: Integer|Угол поворота текста
  property CurrentPos: TFixedPoint|Текущая точка позиции текста
  property Inverted: Boolean|Флаг инверсии
  property LCDDraw: Boolean|Флаг применения LCD
  property Mirrored: Boolean|Флаг, определяющий использование отражения
  property ScaleX: TFloat|Масштаб текста по горизонтали
  property ScaleY: TFloat|Масштаб текста по вертикали
  property SkewX: TFloat|Величина наклона текста по горизонтали
  property SkewY: TFloat|Величина наклона текста по вертикали
  property Spacing: TFloat|Коэффициент зазора между строками текста
  property TranslateX: TFloat|Величина смещения(?) по горизонтали
  property TranslateY: TFloat|Величина смещения(?) по вертикали
  
TTextMetric: TObject|Структура TEXTMETRIC содержит основную информацию о физическом шрифте. Все размеры задаются в логических единицах измерения; то есть они зависят от текущего режима отображения контекста вывода на экран.
  property tmAscent: Integer|Устанавливает высоту символа вместе с надстрочником (для элемента выше базовой линии) символов.
  property tmAveCharWidth: Integer|Устанавливает среднюю ширину символов в шрифте (обычно определяемую как ширина буквы x). Это значение не включает в себя выступ, обязательный для полужирных или курсивных символов.
  property tmBreakChar: Integer|Устанавливает значение символа, который будет использован, чтобы определять границы слова для выравнивания текста.
  property tmCharSet: Byte|Устанавливает набор символов шрифта
  property tmDefaultChar: Char|Устанавливает значение символа, который будет заменен символами, которых нет в шрифте.
  property tmDescent: Integer|Устанавливает пространство ниже базовой линии знака (для элемента ниже базовой линии) символов.
  property tmDigitizedAspectX: Integer|Устанавливает горизонтальную координату устройства, для которого шрифт был разработан.
  property tmDigitizedAspectY: Integer|Устанавливает вертикальную координату устройства, для которого шрифт был разработан. Отношение членов tmDigitizedAspectX и tmDigitizedAspectY равно отношению ширины знака к его высоте устройства, для которого шрифт был разработан.
  property tmExternalLeading: Integer|Устанавливает количество дополнительного междустрочного пространства (пробела), которое приложение добавляет между рядами. Так как эта область - вне шрифта, член не содержит никакой маркировки и не изменяется запросами  вывода текста ни в одном режиме OPAQUE или TRANSPARENT. Дизайнер может установить этот член в нуль.
  property tmFirstChar: Integer|Устанавливает значение первого символа, определенного в шрифте.
  property tmHeight: Integer|Устанавливает высоту (высота символа вместе с надстрочником + пространство ниже базовой линии знака) символов.
  property tmInternalLeading: Integer|Устанавливает величину междустрочного пространства (пробела) внутри границ, установленных членом tmHeight. В этой области могут встретиться знак ударения и другие диакритические символы  . Проектировщик может установить этот член в нуль.
  property tmItalic: Byte|Устанавливает курсивный шрифт, если этот член не нуль.
  property tmLastChar: Char|Устанавливает значение последнего символа, определенного в шрифте.
  property tmMaxCharWidth: Integer|Устанавливает ширину самого широкого символа в шрифте.
  property tmOverhang: Integer|Устанавливает дополнительную ширину на одну строку, которая может добавиться к некоторым синтезируемым шрифтам. При синтезировании некоторых атрибутов, таких как полужирный или курсивный, графический интерфейс устройства (GDI) или устройство должно прибавить ширину к строке и на полный символ и на полную строку базиса. Например, GDI делает строку полужирной, расширяя интервал каждого символа и добавляя лишний знак при помощи значения  смещения; он выделяет курсивом шрифт, при помощи операции сдвига половины строки. В любом случае, это выступ за основную строку. Для полужирных строк, выступ - это расстояние, на которое смещено повторение символа. Для курсивных строк, выступ - величина, на которую сдвигается вершина шрифта  за основу шрифта.
  property tmPitchAndFamily: Byte|Устанавливает информацию о ширине знакоместа, технологии и семействе физического шрифта.
  property tmStruckOut: Byte|Устанавливает зачеркнутый шрифт, если этот член  не нуль.
  property tmUnderlined: Byte|Устанавливает подчеркнутый шрифт, если этот член не нуль.
  property tmWeight: Integer|Устанавливает толщину шрифта.
  
TTimer: TComponent|Таймер. Создаёт экземпляр таймера во время выполнения. Таймеры, добавленные в форму или модули данных на этапе проектирования создаются автоматически. AOwner определяет компонент, обычно форму или модуль данных, который является ответственным за освобождение таймера.
  event OnTimer|Событие, возникающее при прошествии времени таймаута таймера.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Interval: Integer|Значение интервала в милисекундах, через который стработает событие OnTimer.
  property Name: String|Имя элемента
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  
TToolBar: TWinControl|Панель инструментов ToolBar
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property AllowTextButtons: Boolean|Доступность чисто текстовых кнопок
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoSize: Boolean|Автоматически подгонять размер под размер контейнера, в котором находится элемент
  property BorderWidth: Integer|Ширина линии границы
  property ButtonHeight: Integer|Высота кнопки в пикселях
  property ButtonWidth: Integer|Ширина кнопки в пикселях
  property Caption: String|Надпись
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Customizable: Boolean|
  property DisabledImages: TCustomImageList
  property DockSite: Boolean|Определяет, привязан ли объект к контейнеру, в который встроен данный компонент
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property DrawingStyle: TTBDrawingStyle|Хранит тип стиля
  property EdgeBorders: TEdgeBorders|Определяет, какие стороны панели имеют границы.
  property EdgeInner: TEdgeStyle|Определяет стиль рамки для внутреннего края панели инструментов.
  property EdgeOuter: TEdgeStyle|Определяет стиль рамки для внешнего края панели инструментов.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Flat: Boolean|Плоский стиль элемента
  property Font: TFont|Используемый шрифт
  property GradientDirection: TGradientDirection|Определяет направление заливки (градиента)
  property GradientDrawingOptions: TTBGradientDrawingOptions|Хранит опции отображения элемента
  property GradientEndColor: TColor32|Начальный цвет градиента
  property GradientStartColor: TColor32|Конечный цвет градиента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property HideClippedButtons: Boolean|Определяет, скрывать ли кнопки, целиком не помещающиеся в строке туллбара
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property HotImages: TCustomImageList|Список изображений, которые могут появиться, когда курсор мыши находится над кнопками.
  property HotTrackColor: TColor32|Цвет, который используется при Hot tracking, когда используется градиент стиль.
  property Images: TCustomImageList|Содержит компонент класса TCustomImageList, который содержит изображения
  property Indent: Integer|Выражает расстояние между элементами, в пикселах
  property Left: Integer|Координата левого края компонента в пикселях
  property List: Boolean|Выравнивание подписи справа и изображений слева в кнопках
  property Margins: TMargins|Отступ от края внутри элемента 
  property Menu: TMainMenu|Хранит главное меню, из которого панель заполняется кнопками
  property Name: String|Имя элемента
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка.
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowCaptions: Boolean
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Transparent: Boolean
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  property Wrapable: Boolean|Включает автоматическое перенос строк для компонентов в панели инструментов.
  
TToolButton: TGraphicControl|Кнопка компонента ToolBar
  property Action: TBasicAction|Определяет действие, связанное с элементом управления.
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property AllowAllUp: Boolean|Указывает все кнопки ToolBar в группе могут быть не выбранными.
  property AutoSize: Boolean|Автоматически подгонять размер под размер контейнера, в котором находится элемент
  property Caption: String|Надпись
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Down: Boolean|Определяет, нажата ли кнопка
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property DropdownMenu: TPopupMenu
  property EnableDropdown: Boolean
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Grouped: Boolean|Определяет, доступна ли группировка данной кнопки
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property ImageIndex: Integer|Номер картинки
  property Indeterminate: Boolean
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Marked: Boolean|Определяет, помечена ли кнопка (нажата)
  property MenuItem: TMenuItem|Элемент меню
  property Name: String|Имя элемента
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property Style: TToolButtonStyle
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  property Wrap: Boolean|Определяет, разрешен ли перенос слов текста на следующую строку
  
TTorrentFile: TObject|Торрент-файл
  function Create: Constructor|Создание объекта (конструктор)
  function LoadFromFile(const aFileName: String): Boolean|Загрузить из файла. Если всё удачно сложилось, то возвращается True.
  function LoadFromString(const aText: String): Boolean|Загрузить данные из строки. Если всё удачно сложилось, то возвращается True.
  index property Files(p0: Integer): TTorrentSubFile|Доступ к Торрент-субфайлам по их индексу.
  property Count: Integer|Количество Торрент-субфайлов
  property Length: Variant|Длина файла торрент-раздачи
  property MultiFile: Boolean|Режим многофайлового торрента. Определяет, содержаться ли в коллекции Files дополнительные tоррент-субфайлы.
  property Name: String|Имя файла торрент-раздачи
  
TTorrentSubFile: TObject|Торрент-субфайл
  property Length: Variant|Длина файла торрент-раздачи
  property Name: String|Имя файла торрент-раздачи
  property Path: String|Каталог или структура каталогов, нахождения файла торрент-раздачи.
  
TTrackBar: TWinControl|Визуальный элемент управления в виде ползунка, который можно перемещать клавишами или курсором мыши во время выполнения. Таким образом, пользователь может управлять какими-либо процессами: громкость звука, размером изображения и д.р. Ползунок может располагаться как вертикально, так и горизонтально, иметь шкалу с разных сторон и выделенный диапазон этой шкалы.
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property BorderWidth: Integer|Ширина линии границы
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Frequency: Integer|Частота меток шкалы если свойство TickStyle равно tsAuto
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property LineSize: Integer|Определяет насколько смещается ползунок при перемещении стрелками
  property Margins: TMargins|Отступ от края внутри элемента 
  property Max: Integer|Максимальное значение свойства Position
  property Min: Integer|Минимальное значение свойства Position
  property Name: String|Имя элемента
  property Orientation: TTrackBarOrientation|Определяет ориентацию ползунка горизонтальная или вертикальная
  property PageSize: Integer|Определяет насколько смещается ползунок при перемещении клавишами PageUp и PageDawn
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента 
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property Position: Integer|Целое значение, которое изменяется в пределах, задаваемые свойствами Min и Max. По умолчанию это 0 и 10 соответственно. Если задать больше значение Max, то увеличится кол-во возможных значений Position.
  property PositionToolTip: TPositionToolTip
  property SelEnd: Integer|Конец выделения диапазона. SelStart и SelEnd позволяет визуально выделить на шкале некоторый диапазон.
  property SelStart: Integer|Начало выделения диапазона. SelStart и SelEnd позволяет визуально выделить на шкале некоторый диапазон.
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property ShowSelRange: Boolean|Отображать выделенный диапазон с помощью SelStart и SelEnd
  property SliderVisible: Boolean|Отображение ползунка
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property ThumbLength: Integer|Толщина полосы бегунка в пикселях
  property TickMarks: TTickMark|Определяет размещение шкалы относительно компонента сверху или снизу. Если компонент расположен горизонтально и справа или слева если компонент расположен по вертикали либо с обоих сторон.
  property TickStyle: TTickStyle|Указывает способ изображения шкалы. Может принимать значения: tsAuto — автоматическая прорисовка шкалы, tsManual – программное рисование шкалы с помощью метода SetTick, который помещает метку шкалы в позицию, соответствующую значению Value.
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
   
TTransformation: TObject|Преобразование TBitmap32 - является абстрактным предком для классов растровых преобразований.
  function GetTransformedBounds(const ASrcRect: TFloatRect): TFloatRect|Возвращает прямоугольник, который окружает зону назначения в результате преобразования. Координаты прямоугольника задаются по отношению к источнику. Не все производные типы трансформации могут быть в состоянии определить границы трансформации. В этом случае возвращается исходный прямоугольник.
  property SrcRect: TFloatRect|Определяет границу входящего фрагмента изображения.
  
TTreeNode: TPersistent|Отдельный элемент в элементе управления древовидным представлением TTreeView
  function EditText: Boolean|Определяет, разрешено ли редактирование текста элемента
  procedure Delete|Удаление текущего объекта из коллекции 
  property Count: Integer|Количество элементов
  property Data: Pointer|Ссылка на произвольные данные
  property ImageIndex: Integer|Номер картинки
  property SelectedIndex: Integer|Индекс выделенного элемента
  property StateIndex: Integer|Индекс состояния элемента
  property Text: Integer|Текст элемента
  
TTreeNodes: TPersistent|Коллекция элементов в TTreeView
  function Add(Node: TTreeNode; const S: string): TTreeNode
  function AddChild(Node: TTreeNode; const S: string): TTreeNode 
  index property Item(p0: Integer): TTreeNode
  procedure BeginUpdate|Включение режима массового обновления информации в коллекции.\nПри действии данного режима все изменения не будут отражаться на экране, а будут только после выхода из такого режима методом EndUpdate.
  procedure Clear|Очистка коллекции или набора подчинённых объектов 
  procedure Delete(Node: TTreeNode)|Удаление указанного объекта из коллекции 
  procedure EndUpdate|Включение режима массового обновления информации в коллекции.
  property Count: Integer|Количество подчинённых элементов
  
TTreeView: TWinControl|Служит для отображения сложных данных в Windоws отображающихся в виде списка или дерева.
  procedure FullCollapse|Раскрывает все узлы дерева 
  procedure FullExpand|Закрытие всех раскрытых узлов дерева
  property Align: TAlign|Определяет способ выравнивания компонента внутри контейнера (родительского компонента)
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Anchors: TAnchors\|Определяет привязку данного компонента к родительскому при изменении размеров последнего.
  property AutoExpand: Boolean|Если True, узлы дерева, при наведении на них фокуса будут автоматически сворачиваться и разворачиваться
  property BevelEdges: TBevelEdges|Определяет, с какой стороны должен быть скос. По умолчанию, есть со всех сторон. 
  property BevelInner: TBevelCut|Определяет стиль скоса внутренней панели.
  property BevelKind: TBevelKind|Тип скоса. Определяет 3D или 2D вид, а также как он выглядит.
  property BevelOuter: TBevelCut|Определяет стиль скоса внешней панели
  property BevelWidth: Integer|Ширина скоса
  property BiDiMode: TBiDiMode|Свойство BiDiMode определяет направление ввода текста, действует в Windows с поддержкой языков с порядком ввода.
  property BorderStyle: TBorderStyle|Определяет:\n* вид заголовка формы\n* доступные кнопки в заголовке формы\n* отображение строки меню поведение границ формы
  property BorderWidth: Integer|Ширина линии границы
  property ChangeDelay: Integer|Пауза в мс между выделением узла и генерацией события ОnChange
  property Color: TColor32|Цвет элемента
  property Constraints: TSizeConstraints|Определяет ограничения налагаемые на размер компонента.
  property Ctl3D: Boolean|Свойство определяет 3D-вид формы. При выключенном - "плоское" изображение.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property DragCursor: Variant|Определяет изображение курсора мыши при перетаскивании
  property DragKind: TDragKind|Определяет, является ли перетаскивание нормальным или для стыковки.
  property DragMode: TDragMode|Определяет, как инициировать операции: drag-and-drop или drag-and-dock. Используйте DragMode, когда пользователь может перетаскивать элемент управления. Можно отключить drag-and-drop или drag-and-dock во время выполнения, установив значение свойства DragMode к dmManual. Включить автоматическое перетаскивание, установив DragMode в dmAutomatic.
  property Enabled: Boolean|Определяет, доступен ли компонент для взаимодействия с ним.
  property Font: TFont|Используемый шрифт
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property HideSelection: Boolean|Скрывать выделение, если элемент находится не в фокусе
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property HotTrack: Boolean|Заголовок вкладки (закладки) может слегка подсвечиваться, если над ним будет указатель мыши.
  property Images: TCustomImageList|Содержит компонент класса TCustomImageList, который содержит изображения
  property Indent: Integer|Выражает расстояние между узлами дерева, в пикселах
  property Items: TTreeNodes|Элементы дерева
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property MultiSelect: Boolean|Определяет возможность множественного выделения
  property MultiSelectStyle: TMultiSelectStyle|Стиль множественного выделения. TMultiSelectStyle.None, TMultiSelectStyle.Default, TMultiSelectStyle.Extended.
  property Name: String|Имя элемента
  property ParentBiDiMode: Boolean|Флаг - изменение свойства BiDiMode согласно значению объекта-предка формы
  property ParentColor: Boolean|Включает или отключает наследование цвета компонента, согласно значению объекта-предка. 
  property ParentCtl3D: Boolean|Определяет наследование значения свойства Ctl3D от родительского компонента
  property ParentFont: Boolean|Флаг - изменение шрифта (Font) согласно значению объекта-предка 
  property ParentShowHint: Boolean|Включает или отключает показ окна подсказки согласно значению объекта-предка
  property PopupMenu: TPopupMenu|Позволяет указать контекстное меню (объект TPopupMenu) для формы. Это меню вызывается нажатием правой кнопки мыши.
  property ReadOnly: Boolean|Режим "Только чтение" - запрещает изменять значения или состояние элемента
  property RightClickSelect: Boolean|Включает возможность выделения по щелчку правой клавишей мышки
  property RowSelect: Boolean|Выделение целой строкой всех столбцов сразу
  property Selected: TTreeNode|Текущий выбранный элемент
  property ShowButtons: Boolean|Показывать кнопки сворачивания и разворачивания
  property ShowHint: Boolean|Включает или отключает показ ярлычка (всплывающего окна подсказки) при задержке курсора мыши над компонентом
  property ShowLines: Boolean|Включает режим отображения вертикальных линий уровней вложенности
  property ShowRoot: Boolean|Отображать ли главный корневой элемент в дереве
  property SortType: TSortType|Свойство SortType определяет, как сортируются элементы в элементе управления представлением в виде списка.
  property StateImages: TCustomImageList|Свойство StateImages определяет, какой компонент списка изображений является источником изображений состояний для элементов в представлении в виде списка.
  property TabOrder: Integer|Номер в порядке обхода компонентов по нажатию клавиши Tab
  property TabStop: Boolean|При TabStop равным True, компонент будет получать фокус, при False - нет
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property ToolTips: Boolean|Определяет, показывать ли всплывающие подсказки у элементов, у которых название полностью не влезает.
  property Top: Integer|Координата верхнего края компонента в пикселях
  property TopItem: TTreeNode
  property Visible: Boolean|Определяет, видим или невидим компонент
  property Width: Integer|Ширина в пикселях
  
TTrueTypeFont: TObject|True Type шрифт
  function Create(const aFontName: string; aHeight: integer = 14; aStyle: TFontStyles = 0; aCharSet: Integer = 0): Constructor|Создание объекта (конструктор) 
    aFontName - имя семейства шрифта
    aHeight - высота шрифта
    aStyle - стиль шрифта
    aCharSet - номер набора символов
  function GetTextMetrics(var tm: TTextMetric): Boolean|Получение метрики (размеров) в переданную переменную с типом TTextMetric
    tm - объект типа TTextMetric, в который будут занесены значения метрики
  property CharSet: Integer|Номер набора символов
  property FontName: String|Имя семейства шрифта
  property Height: Integer|Высота в пикселях 
  property Hinted: Boolean|Хинтован. Изменение контура шрифта при его растеризации при помощи специальных программных инструкций, заложенных в шрифтовой файл. Используется для обеспечения более чёткой формы букв на устройствах с низким разрешением экрана или при отображении текста в мелком кегле.
  property Size: Integer|Высота шрифта
  property Style: TFontStyles| Стиль шрифта
  
TTwirlTransformation: TTransformation|Преобразование TBitmap32 - закручивание (вихрь, воронка)
  property Twirl: TFloat|Сила закручивания
  
TWinControl: TControl|TWinControl является базовым классом для всех элементов управления, который является обёрткой для экранных объектов Microsoft Windows.
  event OnEnter|Происходит, когда элемент управления получает фокус. 
  event OnExit|Происходит, когда фокус ввода сдвигается от одного элемента управления к другому. 
  event OnKeyDown|Происходит, когда пользователь нажимает любую клавишу, если элемент управления имеет фокус.  
  event OnKeyPress|Происходит при нажатии клавиши 
  event OnKeyUp|Происходит, когда пользователь отпускает клавишу, которая была нажата. 
  procedure SetFocus|Установить фокус на оконный элемент управления
  property AlignWithMargins: Boolean|Выравнивать с учетом отступов. Указывает на то, что при использовании свойства Align, нужно учитывать свойство Margins.
  property Cursor: TControl|Определяет изображение курсора мыши, когда он расположен в области компонента
  property Height: Integer|Высота в пикселях 
  property HelpContext: String|Определяет контекстный идентификатор (context number) для справки
  property HelpKeyword: String|Свойство HelpKeyword определяет ключевое слово справки для компонента
  property HelpType: THelpType|Определяет, какое свойство будет использоваться компонентом для отображения online-справки: HelpContext или HelpKeyword
  property Hint: String|Содержит текст, отображаемый в окне подсказки или в строке состояния
  property Left: Integer|Координата левого края компонента в пикселях
  property Margins: TMargins|Отступ от края внутри элемента 
  property Name: String|Имя элемента управления
  property Tag: Integer|Используется для хранения любой дополнительной информации пользователем
  property Top: Integer|Координата верхнего края компонента в пикселях
  property Width: Integer|Ширина в пикселях
  
TWindowedSincKernel: TCustomKernel|Windowed Sinc фильтры нужны для передискретизации изображения высокого качества. Функция окна используется для ограничения фильтров.
  property Width: Integer|Ширина окна и наследуемых потомков
  
TXMLDocument: TObject|Представляет собой XML-документ
  function Create: Constructor|Создание объекта (конструктор)
  function SaveToString: String|Сохранить представление объекта в XML строку
  procedure LoadFromFile(const aFileName: String)|Загрузить данные XML из файла
  procedure LoadFromString(const aText: String)|Загрузить данные XML из строки 
  procedure SaveToFile(const aFileName: String)|Сохранить данные XML в файл 
  property Root: TXMLItem|Корневой элемент (который содержит все остальные элементы документа)
  
TXMLItem: TObject|Представляет собой элемент XML-документа
  function Add(const aName, aValue: string): TXMLItem|Функция Add добавляет новый элемент TXMLItem с заданным именем и значением
    aName - имя элемента
    aValue - значение элемента
  function Find(const aName: string): TXMLItem|Поиск дочернего элемента с заданным именем в текущем элементе
    aName - имя, по которому будет происходить поиск
  function FindByValues(const aParams: Variant): TXMLItem|Поиск дочернего элемента по значению
    aParams - значения, по которым будет происходить поиск
  function SaveToString: String|Сохранить представление объекта в строку
  index property Attributes(p0: String): Variant|Доступ к значению атрибутов по их имени
    p0 - Индекс атрибута, начиная с 0.
  index property ChildValues(p0: String): Variant|Доступ к значению дочерних элементов по их имени 
    p0 - Индекс элемента, начиная с 0.
  index property Items(p0: Integer): TXMLItem|Доступ к дочерним элементам по их индексу
    p0 - Индекс элемента, начиная с 0.
  property Count: Integer|Количество подчинённых элементов
  property Document: TXMLDocument|XML-документ, содержащий данную коллекцию элементов
  property Name: String|Имя элемента
  property NameSpace: String|Пространство имён
  property Parent: TXMLItem|Элемент-родитель, который содержит данный элемент.
  property Value: String|Значение элемента
  
TfsXMLDocument: TObject|Представляет собой XML-документ в реализации FastScript
  function Create: Constructor|Создание объекта (конструктор)
  procedure LoadFromFile(const Filename: string)|Загрузить данные XML из файла 
    Filename - путь и имя файла, из которого будут загружены XML данные
  procedure LoadFromStream(Stream: TStream)|Загрузить данные XML из потока TStream 
    Stream - объект TStream, из которого будут загружены XML данные
  procedure SaveToFile(const Filename: string)|Сохранить XML в файл 
    Filename - путь и имя файла, в который будут записаны XML данные
  procedure SaveToStream(Stream: TStream)|Сохранить данные XML в поток TStream 
    Stream - объект TStream, в который будут записаны XML данные
  property Root: TfsXMLItem|Корневой элемент (который содержит все остальные элементы документа)
  
TfsXMLItem: TObject|Представляет собой элемент XML-документа в реализации FastScript
  function Add: TfsXMLItem|Добавление нового элемента TfsXMLItem
  function Create: Constructor|Создание объекта (конструктор)
  function Find(const Name: String): Integer|Поиск индекса дочернего элемента с заданным именем
    aName - имя, по которому будет происходить поиск
  function FindItem(const Name: String): TfsXMLItem|Поиск дочернего элемента TfsXMLItem с заданным именем
    aName - имя, по которому будет происходить поиск
  function Root: TfsXMLItem|Корневой элемент
  index property Items(p0: Integer): TfsXMLItem|Доступ к дочерним элементам по их индексу
    p0 - индекс элемента (начиная с 0)
  index property Prop(p0: String): String|Доступ к значению атрибутов по их имени
    p0 - имя атрибута
  procedure AddItem(Item: TfsXMLItem)|Добавление элемента TfsXMLItem в коллекцию
    TfsXMLItem - добавляемый элемент
  procedure Clear|Очистка коллекции всех элементов TfsXMLItem  
  procedure InsertItem(Index: Integer; Item: TfsXMLItem)|Вставка элемента TfsXMLItem в коллекцию по указанному индексу. Все последующие элементы будут смещены вверх.
    Index - индекс, по которому будет происходить вставка элемента
    Item - вставляемый элемент
  property Count: Integer|Количество дочерних элементов в коллекции Items
  property Data: Integer|Произвольные числовые данные (тип Integer)
  property Name: String|Имя элемента
  property Parent: TfsXMLItem|Родительский элемент
  property Text: String|Значение элемента

